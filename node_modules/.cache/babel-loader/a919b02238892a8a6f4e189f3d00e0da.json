{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst cohortName = '2110-VPI-WEB-PT'; // Use the APIURL variable for fetch requests\n\nconst API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\nconst Posts = props => {\n  _s();\n\n  const [loadedPosts, setLoadedPosts] = useState([]); // const [posts. setPosts] = useState([]);\n  // useEffect ( () => {\n  //     const fetchPost = async () =>{\n  //         const response = await fetch(`${API}/posts`)\n  //     }\n  // }\n  // )\n\n  useEffect(() => {\n    async function fetchPage() {\n      try {\n        const response = await fetch(`${API}/posts`);\n        const result = await response.json();\n        setLoadedPosts(result);\n        console.log(loadedPosts);\n      } catch (err) {\n        console.error('no posts', err);\n      }\n    }\n  }, []); // async function fetchPage(){\n  //   try {\n  //     const response = await fetch(`${API}/posts`);\n  //     const result = await response.json();\n  //      setLoadedPosts(result)\n  //      console.log(loadedPosts)\n  //   } catch (err) {\n  //     console.error('no posts', err);\n  //   }\n  // } \n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"B/Rp4EWRU98aKrYyf0Tjviv++GY=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Posts.js"],"names":["React","useEffect","useState","cohortName","API","Posts","props","loadedPosts","setLoadedPosts","fetchPage","response","fetch","result","json","console","log","err","error"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AACA,MAAMC,UAAU,GAAG,iBAAnB,C,CACA;;AACA,MAAMC,GAAG,GAAI,8CAA6CD,UAAW,EAArE;;AAIA,MAAME,KAAK,GAAGC,KAAD,IAAW;AAAA;;AAEtB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,EAAD,CAA9C,CAFsB,CAIpB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeQ,SAAf,GAA0B;AAC1B,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,GAAI,QAAR,CAA5B;AACA,cAAMQ,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAArB;AACCL,QAAAA,cAAc,CAACI,MAAD,CAAd;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYR,WAAZ;AAEF,OAND,CAME,OAAOS,GAAP,EAAY;AACZF,QAAAA,OAAO,CAACG,KAAR,CAAc,UAAd,EAA0BD,GAA1B;AACD;AACF;AAAC,GAXO,EAWL,EAXK,CAAT,CAZoB,CAwBxB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AACI,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA3CD;;GAAMX,K;;KAAAA,K;AA6CN,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nconst cohortName = '2110-VPI-WEB-PT';\n// Use the APIURL variable for fetch requests\nconst API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n\n\nconst Posts= (props) => {\n\n  const [loadedPosts, setLoadedPosts] = useState([]);\n\n    // const [posts. setPosts] = useState([]);\n    // useEffect ( () => {\n    //     const fetchPost = async () =>{\n    //         const response = await fetch(`${API}/posts`)\n    //     }\n    // }\n    // )\n\n    useEffect(() => {\n      async function fetchPage(){\n      try {\n        const response = await fetch(`${API}/posts`);\n        const result = await response.json();\n         setLoadedPosts(result)\n         console.log(loadedPosts)\n     \n      } catch (err) {\n        console.error('no posts', err);\n      }\n    }}, []); \n// async function fetchPage(){\n//   try {\n//     const response = await fetch(`${API}/posts`);\n//     const result = await response.json();\n//      setLoadedPosts(result)\n//      console.log(loadedPosts)\n \n//   } catch (err) {\n//     console.error('no posts', err);\n//   }\n// } \n    return (\n        <div>\n            <h1>Posts</h1>\n        </div>\n      \n        \n    )\n    \n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}