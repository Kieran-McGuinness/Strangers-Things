{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/CreatePost.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { callApi, createPost } from \"../api\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatePost = props => {\n  _s();\n\n  const loadedPosts = props.loadedPosts;\n  const setLoadedPosts = props.setLoadedPosts;\n  const setPostsToDisplay = props.setPostsToDisplay;\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n\n  const handleSubmitNewPost = async event => {\n    event.preventDefault();\n    let postInfo = {\n      post: {\n        title: `${title}`,\n        description: `${description}`,\n        price: `${price}`,\n        location: `${location}`,\n        willDeliver: `${willDeliver}`\n      }\n    };\n    setTitle(\"\");\n    setDescription(\"\");\n    setPrice(\"\");\n    setLocation(\"\");\n    setWillDeliver(false);\n    const data = await callApi({\n      url: \"/posts\",\n      method: \"POST\",\n      token: localStorage.getItem(\"myToken\"),\n      body: postInfo\n    });\n\n    if (data.success) {\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = `Post has been created`;\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n    } else if (!data.success) {\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = `${data.message}`;\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n    }\n\n    setPostsToDisplay([data.data.post, ...loadedPosts]);\n    setLoadedPosts([data.data.post, ...loadedPosts]);\n  };\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n\n  const handlePriceChange = event => {\n    setPrice(event.target.value);\n  };\n\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleWillDeliverChange = event => {\n    setWillDeliver(event.target.checked);\n  };\n\n  return localStorage.getItem(\"myToken\") ? /*#__PURE__*/_jsxDEV(\"aside\", {\n    id: \"createpost\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"createposttitle\",\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"createpostform\",\n      onSubmit: handleSubmitNewPost,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"createdescription\",\n        label: \"Description\",\n        value: description,\n        variant: \"standard\",\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"createlocation\",\n        label: \"Location:\",\n        value: location,\n        variant: \"standard\",\n        onChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"createprice\",\n        label: \"Price:\",\n        value: price,\n        variant: \"standard\",\n        onChange: handlePriceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"createtitle\",\n        label: \"Title\",\n        value: title,\n        variant: \"standard\",\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: willDeliver,\n          onChange: handleWillDeliverChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 48\n        }, this),\n        label: \"Will Deliver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"submitcreatepostbtn\",\n        sx: {\n          mb: 2\n        },\n        variant: \"contained\",\n        color: \"primary\",\n        size: \"small\",\n        type: \"submit\",\n        children: \"Submit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(CreatePost, \"P1ax2MaoAsC5jCB9TX0ngTp4eOA=\");\n\n_c = CreatePost;\nexport default CreatePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/CreatePost.js"],"names":["useEffect","useState","callApi","createPost","Box","TextField","Button","FormGroup","FormControlLabel","Checkbox","CreatePost","props","loadedPosts","setLoadedPosts","setPostsToDisplay","description","setDescription","location","setLocation","price","setPrice","title","setTitle","willDeliver","setWillDeliver","handleSubmitNewPost","event","preventDefault","postInfo","post","data","url","method","token","localStorage","getItem","body","success","document","getElementsByClassName","className","getElementById","innerText","setTimeout","message","handleDescriptionChange","target","value","handleLocationChange","handlePriceChange","handleTitleChange","handleWillDeliverChange","checked","mb"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { callApi, createPost } from \"../api\"\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\nconst CreatePost = (props) => {\n    const loadedPosts = props.loadedPosts\n    const setLoadedPosts = props.setLoadedPosts\n    const setPostsToDisplay = props.setPostsToDisplay\n    const [description, setDescription] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [willDeliver, setWillDeliver] = useState(false)\n\n    const handleSubmitNewPost = async (event) => {\n        event.preventDefault()\n        let postInfo = {\n            post: {\n                title: `${title}`,\n                description: `${description}`,\n                price: `${price}`,\n                location: `${location}`,\n                willDeliver: `${willDeliver}`\n            }\n        }\n        setTitle(\"\")\n        setDescription(\"\")\n        setPrice(\"\")\n        setLocation(\"\")\n        setWillDeliver(false)\n        const data = await callApi({ url: \"/posts\", method: \"POST\", token: localStorage.getItem(\"myToken\"), body: postInfo })\n        if (data.success) {\n            document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n            document.getElementById(\"float\").innerText = `Post has been created`\n            setTimeout(function () {\n                document.getElementById(\"float\").className = \"hidden\";\n            }, 5000)\n        } else if (!data.success) {\n            document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n            document.getElementById(\"float\").innerText = `${data.message}`\n            setTimeout(function () {\n                document.getElementById(\"float\").className = \"hidden\";\n            }, 5000)\n        }\n        setPostsToDisplay([data.data.post, ...loadedPosts])\n        setLoadedPosts([data.data.post, ...loadedPosts])\n    }\n\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value)\n    }\n    const handleLocationChange = (event) => {\n        setLocation(event.target.value)\n    }\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value)\n    }\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value)\n    }\n    const handleWillDeliverChange = (event) => {\n        setWillDeliver(event.target.checked)\n    }\n\n\n\n    return (\n        localStorage.getItem(\"myToken\") ?\n            <aside id=\"createpost\">\n                <h1 id=\"createposttitle\">Create Post</h1>\n                <Box component=\"form\" noValidate autoComplete=\"off\" id=\"createpostform\" onSubmit={handleSubmitNewPost}>\n                    <TextField\n                        required\n                        id=\"createdescription\"\n                        label=\"Description\"\n                        value={description}\n                        variant=\"standard\"\n                        onChange={handleDescriptionChange}\n                    />\n                    <TextField\n                        required\n                        id=\"createlocation\"\n                        label=\"Location:\"\n                        value={location}\n                        variant=\"standard\"\n                        onChange={handleLocationChange}\n                    />\n                    <TextField\n                        required\n                        id=\"createprice\"\n                        label=\"Price:\"\n                        value={price}\n                        variant=\"standard\"\n                        onChange={handlePriceChange}\n                    />\n                    <TextField\n                        required\n                        id=\"createtitle\"\n                        label=\"Title\"\n                        value={title}\n                        variant=\"standard\"\n                        onChange={handleTitleChange}\n                    />\n                    <FormControlLabel control={<Checkbox value={willDeliver} onChange={handleWillDeliverChange} />} label=\"Will Deliver\" />\n                    <Button id=\"submitcreatepostbtn\" sx={{ mb: 2 }} variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\">Submit Post</Button>\n                </Box>\n\n            </aside> :\n            <></>\n    )\n}\n\n\n\nexport default CreatePost"]},"metadata":{},"sourceType":"module"}