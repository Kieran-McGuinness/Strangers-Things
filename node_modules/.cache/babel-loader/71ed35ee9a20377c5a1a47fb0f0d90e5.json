{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const setPostsToDisplay = props.setPostsToDisplay;\n  const loadedPosts = props.loadedPosts;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function postMatches(post, term) {\n    if (post.description.toLowerCase().includes(term.toLowerCase()) || post.title.toLowerCase().includes(term.toLowerCase()) || post.location.toLowerCase().includes(term.toLowerCase()) || post.author.username.toLowerCase().includes(term.toLowerCase())) {\n      return true;\n    }\n  }\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSubmitSearch = event => {\n    event.preventDefault();\n    const filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\n    setPostsToDisplay(searchTerm.length ? filteredPosts : loadedPosts);\n    console.log(searchTerm);\n    setSearchTerm(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    id: \"searchform\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 0,\n        mb: 4,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmitSearch,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"site-search\",\n      label: \"Search Posts...\",\n      type: \"search\",\n      variant: \"standard\",\n      onChange: handleSearchChange,\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Search;\n{\n  /* <Box component=\"form\"  sx={{\n     '& .MuiTextField-root': { width: '25ch' }, display: \"flex\", flexDirection: \"row\"\n   }} noValidate autoComplete=\"off\" onSubmit={handleMessageSubmit}>\n     <div>\n         <TextField required id=\"createmessage\" multiline value={message} onChange={handleMessageChange} label=\"Message:\" />\n         <Button sx={{ display:\"flex\", flexDirection:\"row\", alignItems: 'flex-end' }}size=\"small\" variant=\"contained\" color=\"primary\" type=\"submit\">Send Message</Button>\n     </div>\n  </Box> */\n}\nexport default Search; // data.author.username\n// data.description\n// data.title\n// data.location\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js"],"names":["useState","Box","TextField","Button","Search","props","setPostsToDisplay","loadedPosts","searchTerm","setSearchTerm","postMatches","post","term","description","toLowerCase","includes","title","location","author","username","handleSearchChange","event","target","value","handleSubmitSearch","preventDefault","filteredPosts","filter","length","console","log","m","mb","width"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AAAA;;AACzB,QAAMC,iBAAiB,GAAGD,KAAK,CAACC,iBAAhC;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AACA,WAASU,WAAT,CAAqBC,IAArB,EAA4BC,IAA5B,EAAiC;AAC7B,QAAID,IAAI,CAACE,WAAL,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCH,IAAI,CAACE,WAAL,EAAxC,KAEJH,IAAI,CAACK,KAAL,CAAWF,WAAX,GAAyBC,QAAzB,CAAkCH,IAAI,CAACE,WAAL,EAAlC,CAFI,IAIJH,IAAI,CAACM,QAAL,CAAcH,WAAd,GAA4BC,QAA5B,CAAqCH,IAAI,CAACE,WAAL,EAArC,CAJI,IAMJH,IAAI,CAACO,MAAL,CAAYC,QAAZ,CAAqBL,WAArB,GAAmCC,QAAnC,CAA4CH,IAAI,CAACE,WAAL,EAA5C,CANA,EAOC;AACG,aAAO,IAAP;AACH;AAAC;;AACN,QAAMM,kBAAkB,GAAIC,KAAD,IAAS;AAChCZ,IAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAIH,KAAD,IAAU;AACrCA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,aAAa,GAAGnB,WAAW,CAACoB,MAAZ,CAAmBhB,IAAI,IAAID,WAAW,CAACC,IAAD,EAAOH,UAAP,CAAtC,CAAtB;AACAF,IAAAA,iBAAiB,CAACE,UAAU,CAACoB,MAAX,GAAoBF,aAApB,GAAoCnB,WAArC,CAAjB;AACAsB,IAAAA,OAAO,CAACC,GAAR,CAAYtB,UAAZ;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACC,GAND;;AAWI,sBACI,QAAC,GAAD;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,EAAE,EAAC,YAA1B;AACA,IAAA,EAAE,EAAE;AACF,8BAAwB;AAAEsB,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,EAAE,EAAC,CAAX;AAAcC,QAAAA,KAAK,EAAE;AAArB;AADtB,KADJ;AAIA,IAAA,UAAU,MAJV;AAKA,IAAA,YAAY,EAAC,KALb;AAKmB,IAAA,QAAQ,EAAET,kBAL7B;AAAA,4BAQJ,QAAC,SAAD;AACM,MAAA,EAAE,EAAC,aADT;AAEM,MAAA,KAAK,EAAC,iBAFZ;AAGM,MAAA,IAAI,EAAC,QAHX;AAIM,MAAA,OAAO,EAAC,UAJd;AAKM,MAAA,QAAQ,EAAEJ,kBALhB;AAMM,MAAA,KAAK,EAAEZ;AANb;AAAA;AAAA;AAAA;AAAA,YARI,eAkBJ,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,WAAhB;AAA4B,MAAA,KAAK,EAAC,SAAlC;AAA4C,MAAA,IAAI,EAAC,OAAjD;AAAyD,MAAA,IAAI,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAtDD;;GAAMJ,M;;KAAAA,M;AAwDN;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AAAU;AAGV,eAAeA,MAAf,C,CAEA;AACA;AACA;AACA","sourcesContent":["import { useState } from \"react\"\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\n\nconst Search = (props) =>{\nconst setPostsToDisplay = props.setPostsToDisplay\nconst loadedPosts = props.loadedPosts\nconst [searchTerm, setSearchTerm] = useState(\"\")\nfunction postMatches(post , term){\n    if (post.description.toLowerCase().includes(term.toLowerCase()) \n    ||\n    post.title.toLowerCase().includes(term.toLowerCase())\n    ||\n    post.location.toLowerCase().includes(term.toLowerCase())\n    ||\n    post.author.username.toLowerCase().includes(term.toLowerCase())\n    ){\n        return true\n    }}\nconst handleSearchChange = (event)=>{\n    setSearchTerm(event.target.value)\n}\n\nconst handleSubmitSearch = (event) =>{\nevent.preventDefault()\nconst filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\nsetPostsToDisplay(searchTerm.length ? filteredPosts : loadedPosts)\nconsole.log(searchTerm)\nsetSearchTerm(\"\")\n}\n\n\n\n\n    return (\n        <Box  component=\"form\" id=\"searchform\"\n        sx={{\n          '& .MuiTextField-root': { m: 0, mb:4, width: '25ch' },\n        }}\n        noValidate\n        autoComplete=\"off\" onSubmit={handleSubmitSearch}>\n{/* <div id=\"search\"> */}\n    {/* <form id=\"searchform\" onSubmit={handleSubmitSearch}> */}\n    <TextField\n          id=\"site-search\"\n          label=\"Search Posts...\"\n          type=\"search\"\n          variant=\"standard\"\n          onChange={handleSearchChange}\n          value={searchTerm}\n        />\n    {/* <label htmlFor=\"site-search\">Search Posts:</label> */}\n    {/* <input type =\"search\" id=\"site-search\" onChange={handleSearchChange} value={searchTerm}/> */}\n    <Button variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\">Search</Button>\n    {/* </form> */}\n{/* </div> */}\n</Box>\n    )\n}\n\n{/* <Box component=\"form\"  sx={{\n    '& .MuiTextField-root': { width: '25ch' }, display: \"flex\", flexDirection: \"row\"\n  }} noValidate autoComplete=\"off\" onSubmit={handleMessageSubmit}>\n    <div>\n        <TextField required id=\"createmessage\" multiline value={message} onChange={handleMessageChange} label=\"Message:\" />\n        <Button sx={{ display:\"flex\", flexDirection:\"row\", alignItems: 'flex-end' }}size=\"small\" variant=\"contained\" color=\"primary\" type=\"submit\">Send Message</Button>\n    </div>\n</Box> */}\n\n\nexport default Search\n\n// data.author.username\n// data.description\n// data.title\n// data.location"]},"metadata":{},"sourceType":"module"}