{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { callApi } from \"../api\";\nimport Button from '@mui/material/Button';\nimport { TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  let history = useHistory();\n  const [loginMessage, setLoginMessage] = useState([]);\n  const setCurrentAuthToken = props.setCurrentAuthToken;\n  const authToken = props.authToken;\n  const setAuthToken = props.setAuthToken; // checks if there is a token currently in local Storage, if so saves it to states\n\n  useEffect(() => {\n    localStorage.getItem(\"myToken\") ? setCurrentAuthToken(localStorage.getItem(\"myToken\")) : setAuthToken(null);\n  }, []);\n\n  const handleLogOut = event => {\n    // clears local storage to remove key and log user out\n    event.preventDefault();\n    localStorage.removeItem(\"myToken\");\n    setCurrentAuthToken(\"\");\n    setAuthToken(null);\n  };\n\n  const handleSubmit = async event => {\n    // takes entered password and username and send to callApi, if succesfull creates a notification\n    let loginInfo = {\n      user: {\n        username: `${username}`,\n        password: `${password}`\n      }\n    };\n    event.preventDefault();\n    const results = await callApi({\n      url: \"/users/login\",\n      method: \"POST\",\n      body: loginInfo\n    });\n    localStorage.setItem(\"myToken\", results.data.token);\n    setLoginMessage(results.data);\n    setPassword(\"\");\n    setUsername(\"\");\n    console.log(results);\n    setAuthToken(true);\n    setCurrentAuthToken(localStorage.getItem(\"myToken\"));\n\n    if (results.success) {\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = `${results.data.message}. You will be redirected shortly.`;\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n        history.push(\"/posts\");\n      }, 3000);\n    }\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  return authToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loggedin\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: loginMessage ? \"You are currently logged in\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: localStorage.getItem(\"myToken\") ? \"To log out please click below\" : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleLogOut,\n      variant: \"contained\",\n      color: \"primary\",\n      type: \"submit\",\n      size: \"small\",\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Please login or register below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"loginform\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"loginusername\",\n        label: \"Username:\",\n        value: username,\n        variant: \"standard\",\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"loginpassword\",\n        label: \"Password:\",\n        value: password,\n        variant: \"standard\",\n        type: \"password\",\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        sx: {\n          mt: .5\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Need to register?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 13\n  }, this);\n};\n\n_s(LoginForm, \"BrRb3MvPizk9FmF5JaVK0NuGgqM=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/LoginForm.js"],"names":["Link","useEffect","useState","callApi","Button","TextField","Box","useHistory","LoginForm","props","history","loginMessage","setLoginMessage","setCurrentAuthToken","authToken","setAuthToken","localStorage","getItem","handleLogOut","event","preventDefault","removeItem","handleSubmit","loginInfo","user","username","password","results","url","method","body","setItem","data","token","setPassword","setUsername","console","log","success","document","getElementsByClassName","className","getElementById","innerText","message","setTimeout","push","handleUsernameChange","target","value","handlePasswordChange","mt"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { callApi } from \"../api\"\nimport Button from '@mui/material/Button';\nimport { TextField } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst LoginForm = (props) => {\n    let history = useHistory()\n    const [loginMessage, setLoginMessage] = useState([])\n    const setCurrentAuthToken = props.setCurrentAuthToken\n    const authToken = props.authToken\n    const setAuthToken = props.setAuthToken\n    // checks if there is a token currently in local Storage, if so saves it to states\n    useEffect(() => {\n        localStorage.getItem(\"myToken\")\n            ?\n            setCurrentAuthToken(localStorage.getItem(\"myToken\"))\n            :\n            setAuthToken(null)\n    }, [])\n\n\n    const handleLogOut = (event) => {\n        // clears local storage to remove key and log user out\n        event.preventDefault()\n        localStorage.removeItem(\"myToken\")\n        setCurrentAuthToken(\"\")\n        setAuthToken(null)\n    }\n\n\n    const handleSubmit = async (event) => {\n        // takes entered password and username and send to callApi, if succesfull creates a notification\n        let loginInfo = {\n            user: {\n                username: `${username}`,\n                password: `${password}`\n            }\n        }\n        event.preventDefault()\n        const results = await callApi({ url: \"/users/login\", method: \"POST\", body: loginInfo })\n        localStorage.setItem(\"myToken\", results.data.token)\n        setLoginMessage(results.data)\n        setPassword(\"\")\n        setUsername(\"\")\n        console.log(results)\n        setAuthToken(true)\n        setCurrentAuthToken(localStorage.getItem(\"myToken\"))\n        if (results.success) {\n            document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n            document.getElementById(\"float\").innerText = `${results.data.message}. You will be redirected shortly.`\n            setTimeout(function () {\n                document.getElementById(\"float\").className = \"hidden\";\n                history.push(\"/posts\");\n            }, 3000)\n        }\n    }\n\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value)\n    }\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value)\n    }\n\n\n\n    return (\n        authToken ?\n            <div id=\"loggedin\">\n                <p>{loginMessage ? \"You are currently logged in\" : \"\"}</p>\n                <p>{localStorage.getItem(\"myToken\") ? \"To log out please click below\" : \"\"}</p>\n                <Button onClick={handleLogOut} variant=\"contained\" color=\"primary\" type=\"submit\" size=\"small\">Log Out</Button>\n            </div>\n            :\n            <div id=\"login\">\n                <h1>Please login or register below</h1>\n                <Box component=\"form\" noValidate autoComplete=\"off\" id=\"loginform\" onSubmit={handleSubmit}>\n                    <TextField required id=\"loginusername\" label=\"Username:\" value={username} variant=\"standard\" onChange={handleUsernameChange} />\n                    <TextField required id=\"loginpassword\" label=\"Password:\" value={password} variant=\"standard\" type=\"password\" onChange={handlePasswordChange} />\n                    <Button variant=\"contained\" color=\"primary\" type=\"submit\" sx={{ mt: .5 }}>Submit</Button>\n                    <Link to=\"/register\">Need to register?</Link>\n                </Box>\n\n            </div>\n\n    )\n}\n\n\n\n\nexport default LoginForm\n\n\n"]},"metadata":{},"sourceType":"module"}