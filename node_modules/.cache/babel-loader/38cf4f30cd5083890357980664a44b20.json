{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/IndividualPost.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst IndividualPost = props => {\n  _s();\n\n  const loadedPosts = props.loadedPosts;\n  const postId = props.postId;\n  const index = props.index;\n  const [viewClicked, setViewClicked] = useState(false);\n\n  const handleViewClicked = () => {\n    setViewClicked(true);\n    console.log(postId);\n    console.log(\"clicked view\");\n    console.log(index);\n    console.log(loadedPosts[index]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/viewpost\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      children: \"View\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this) // viewClicked ?  <div key={loadedPosts[index]._id} className='viewIndPost'>\n  // <p>{loadedPosts[index].title}</p>\n  // <p>{loadedPosts[index].author.username}</p>\n  // <p>{loadedPosts[index].createdAt}</p>\n  // <p>{loadedPosts[index].price}</p>\n  // <p>{loadedPosts[index].description}</p>\n  // <p>{loadedPosts[index].location}</p>\n  // <p>{loadedPosts[index].willDeliver}</p>\n  //           </div>   :\n  //           <div id = \"viewPost\">\n  // <button onClick={handleViewClicked}>View</button> </div>\n  ;\n};\n\n_s(IndividualPost, \"Hy4sJ847fjjUKjDCvWfxZsZdoRw=\");\n\n_c = IndividualPost;\nexport default IndividualPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndividualPost\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/IndividualPost.js"],"names":["useState","Link","IndividualPost","props","loadedPosts","postId","index","viewClicked","setViewClicked","handleViewClicked","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,cAAc,GAAIC,KAAD,IAAU;AAAA;;AAC7B,QAAMC,WAAW,GAAGD,KAAK,CAACC,WAA1B;AACA,QAAMC,MAAM,GAAGF,KAAK,CAACE,MAArB;AACA,QAAMC,KAAK,GAAGH,KAAK,CAACG,KAApB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C;;AACJ,QAAMS,iBAAiB,GAAG,MAAK;AAC3BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACJE,IAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYP,WAAW,CAACE,KAAD,CAAvB;AACC,GAND;;AAOI,sBACI,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,WAAT;AAAA,2BACH;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,UADJ,CAMI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAhBJ;AAmBH,CA/BD;;GAAMJ,c;;KAAAA,c;AAiCN,eAAeA,cAAf","sourcesContent":["import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n\nconst IndividualPost = (props) =>{\n    const loadedPosts = props.loadedPosts\n    const postId = props.postId\n    const index = props.index\n    const [viewClicked, setViewClicked] = useState(false) \nconst handleViewClicked = () =>{\n    setViewClicked(true)\nconsole.log(postId)\nconsole.log(\"clicked view\")\nconsole.log(index)\nconsole.log(loadedPosts[index])\n}\n    return (\n        <Link to=\"/viewpost\">\n     <button type=\"button\">\n          View\n     </button>\n </Link>\n        // viewClicked ?  <div key={loadedPosts[index]._id} className='viewIndPost'>\n        // <p>{loadedPosts[index].title}</p>\n        // <p>{loadedPosts[index].author.username}</p>\n        // <p>{loadedPosts[index].createdAt}</p>\n        // <p>{loadedPosts[index].price}</p>\n        // <p>{loadedPosts[index].description}</p>\n        // <p>{loadedPosts[index].location}</p>\n        // <p>{loadedPosts[index].willDeliver}</p>\n        //           </div>   :\n        //           <div id = \"viewPost\">\n        // <button onClick={handleViewClicked}>View</button> </div>\n  \n    )\n} \n\nexport default IndividualPost"]},"metadata":{},"sourceType":"module"}