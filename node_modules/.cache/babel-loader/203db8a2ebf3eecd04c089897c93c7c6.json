{"ast":null,"code":"const {\n  REACT_APP_BASE_URL\n} = process.env;\nexport const callApi = async _ref => {\n  let {\n    url,\n    method,\n    token,\n    body\n  } = _ref;\n\n  // console.log({ url, method, token, body })\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    } // console.log('request url: ', REACT_APP_BASE_URL + url)\n    // console.log('options: ', options);\n\n\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json(); // console.log('data: ', data);\n\n    if (data.error) throw data.error;\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n    return error;\n  }\n}; // Below are original fetch commands before using single above command\n// saved for future reference\n// +++++++++++++++++++\n// export async function getPosts() {\n//     try {\n//       const response =  localStorage.getItem(\"myToken\")\n//       ? \n//       await fetch(`${API}/posts`, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//         }\n//       })\n//       :\n//       await fetch(`${API}/posts`)\n//       ;\n//       const result = await response.json();\n//       // console.log(result)\n//       return result;\n//     } catch (error) {\n//       throw error;\n//     }\n//   }\n// export async function registerNew (regInfo) {\n//   try{\n//     const response = await fetch(`${API}/users/register`,\n//     {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(\n//         regInfo\n//         ),\n//     }\n//     );\n//     const result = await response.json();\n//     console.log(result);\n//   } catch (error){\n//     console.error('could not register', error)\n//   }\n// };\n//   export function loginUser (loginInfo){\n//   return fetch(`${API}/users/login`,{\n//      method: 'POST',\n//      headers: {\n//        'Content-Type': 'application/json'\n//      },\n//      body: JSON.stringify\n//      (\n//        loginInfo\n//        ),\n//    }\n//    ).then(response => response.json())\n//    .then(result =>{\n//      result.data.token ? localStorage.setItem(\"myToken\", result.data.token): console.log(result);\n//      console.log(result)\n//      return result;\n//    }).catch(console.error);\n//  }\n//  export function createPost (postInfo){\n//   return fetch(`${API}/posts`,{\n//      method: 'POST',\n//      headers: {\n//        'Content-Type': 'application/json',\n//        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//      },\n//      body: JSON.stringify\n//      (\n//        postInfo\n//        ),\n//    }\n//    ).then(response => response.json())\n//    .then(result =>{\n//      console.log(result)\n//      return result;\n//    }).catch(console.error);\n//  }\n//  export async function deletePost(postId) {\n//   try {\n//     const response =  await fetch(`${API}/posts/${postId}`, {\n//       method:  'DELETE',\n//       headers: {\n//         'Content-Type': 'application/json',\n//      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       }\n//     })\n//     ;\n//     const result = await response.json();\n//     console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n// export async function getMe() {\n//   try {\n//     const response =  localStorage.getItem(\"myToken\")\n//     ? \n//     await fetch(`${API}/users/me`, {\n//       headers: {\n//         'Content-Type': 'application/json',\n//      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       }\n//     })\n//     :\n//     await fetch(`${API}/users/me`)\n//     ;\n//     const result = await response.json();\n//     // console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n// export async function sendMessage (messageInfo, postId) {\n//   try{\n//     const response = await fetch(`${API}/posts/${postId}/messages`,\n//     {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       },\n//       body: JSON.stringify(\n//         messageInfo\n//         ),\n//     }\n//     );\n//     const result = await response.json();\n//     return results\n//     console.log(result);\n//   } catch (error){\n//     console.error('could not send message', error)\n//   }\n// };\n// export async function getIndvPosts(id) {\n//   try {\n//     const response = localStorage.getItem(\"myToken\")\n//       ?\n//       await fetch(`${API}/posts/${id}`, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//         }\n//       })\n//       :\n//       await fetch(`${API}/posts`)\n//       ;\n//     const result = await response.json();\n//     // console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n// export async function editPosts(info, id) {\n//   try {\n//     const response =  await fetch(`${API}/posts/${id}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         'Content-Type': 'application/json',\n//      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       },\n//       body: JSON.stringify(\n//         info\n//       )\n//     });\n//     const result = await response.json();\n//     console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/api/index.js"],"names":["REACT_APP_BASE_URL","process","env","callApi","url","method","token","body","options","toUpperCase","headers","JSON","stringify","response","fetch","data","json","error","console","log"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAyBC,OAAO,CAACC,GAAvC;AAEA,OAAO,MAAMC,OAAO,GAAG,cAAwC;AAAA,MAAjC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,KAAf;AAAsBC,IAAAA;AAAtB,GAAiC;;AAC7D;AACA,MAAI;AAEF,UAAMC,OAAO,GAAG;AACdH,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACI,WAAP,EAAH,GAA0B,KAD1B;AAEdC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdH,MAAAA,IAAI,EAAEI,IAAI,CAACC,SAAL,CAAeL,IAAf;AALQ,KAAhB;;AAQA,QAAID,KAAJ,EAAW;AACTE,MAAAA,OAAO,CAACE,OAAR,CAAgB,eAAhB,IAAoC,UAASJ,KAAM,EAAnD;AACD,KAZC,CAaF;AACA;;;AACA,UAAMO,QAAQ,GAAG,MAAMC,KAAK,CAACd,kBAAkB,GAAGI,GAAtB,EAA2BI,OAA3B,CAA5B;AACA,UAAMO,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB,CAhBE,CAiBF;;AACA,QAAID,IAAI,CAACE,KAAT,EAAgB,MAAMF,IAAI,CAACE,KAAX;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,WAAOA,IAAP;AACD,GArBD,CAqBE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACA,WAAOA,KAAP;AACD;AACF,CA3BM,C,CA8BP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const { REACT_APP_BASE_URL } = process.env;\n\nexport const callApi = async ({ url, method, token, body }) => {\n  // console.log({ url, method, token, body })\n  try {\n\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n    // console.log('request url: ', REACT_APP_BASE_URL + url)\n    // console.log('options: ', options);\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json();\n    // console.log('data: ', data);\n    if (data.error) throw data.error;\n    console.log(data)\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n    return error\n  }\n}\n\n\n// Below are original fetch commands before using single above command\n// saved for future reference\n// +++++++++++++++++++\n\n// export async function getPosts() {\n//     try {\n//       const response =  localStorage.getItem(\"myToken\")\n//       ? \n//       await fetch(`${API}/posts`, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//         }\n//       })\n//       :\n//       await fetch(`${API}/posts`)\n//       ;\n//       const result = await response.json();\n//       // console.log(result)\n//       return result;\n//     } catch (error) {\n//       throw error;\n//     }\n//   }\n\n\n// export async function registerNew (regInfo) {\n//   try{\n//     const response = await fetch(`${API}/users/register`,\n//     {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(\n//         regInfo\n//         ),\n//     }\n//     );\n//     const result = await response.json();\n//     console.log(result);\n//   } catch (error){\n//     console.error('could not register', error)\n//   }\n// };\n\n//   export function loginUser (loginInfo){\n//   return fetch(`${API}/users/login`,{\n//      method: 'POST',\n//      headers: {\n//        'Content-Type': 'application/json'\n//      },\n//      body: JSON.stringify\n//      (\n//        loginInfo\n//        ),\n//    }\n//    ).then(response => response.json())\n//    .then(result =>{\n//      result.data.token ? localStorage.setItem(\"myToken\", result.data.token): console.log(result);\n//      console.log(result)\n//      return result;\n//    }).catch(console.error);\n//  }\n\n\n//  export function createPost (postInfo){\n//   return fetch(`${API}/posts`,{\n//      method: 'POST',\n//      headers: {\n//        'Content-Type': 'application/json',\n//        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//      },\n//      body: JSON.stringify\n//      (\n//        postInfo\n//        ),\n//    }\n//    ).then(response => response.json())\n//    .then(result =>{\n//      console.log(result)\n//      return result;\n//    }).catch(console.error);\n//  }\n\n\n//  export async function deletePost(postId) {\n//   try {\n//     const response =  await fetch(`${API}/posts/${postId}`, {\n//       method:  'DELETE',\n//       headers: {\n//         'Content-Type': 'application/json',\n//      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       }\n//     })\n//     ;\n//     const result = await response.json();\n//     console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n\n// export async function getMe() {\n//   try {\n//     const response =  localStorage.getItem(\"myToken\")\n//     ? \n//     await fetch(`${API}/users/me`, {\n//       headers: {\n//         'Content-Type': 'application/json',\n//      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       }\n//     })\n//     :\n//     await fetch(`${API}/users/me`)\n//     ;\n//     const result = await response.json();\n//     // console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n\n\n// export async function sendMessage (messageInfo, postId) {\n//   try{\n//     const response = await fetch(`${API}/posts/${postId}/messages`,\n//     {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//         'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       },\n//       body: JSON.stringify(\n//         messageInfo\n//         ),\n//     }\n//     );\n//     const result = await response.json();\n//     return results\n//     console.log(result);\n//   } catch (error){\n//     console.error('could not send message', error)\n//   }\n// };\n\n// export async function getIndvPosts(id) {\n//   try {\n//     const response = localStorage.getItem(\"myToken\")\n//       ?\n//       await fetch(`${API}/posts/${id}`, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//           'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//         }\n//       })\n//       :\n//       await fetch(`${API}/posts`)\n//       ;\n//     const result = await response.json();\n//     // console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n\n// export async function editPosts(info, id) {\n//   try {\n//     const response =  await fetch(`${API}/posts/${id}`, {\n//       method: \"PATCH\",\n//       headers: {\n//         'Content-Type': 'application/json',\n//      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//       },\n//       body: JSON.stringify(\n//         info\n//       )\n//     });\n//     const result = await response.json();\n//     console.log(result)\n//     return result;\n//   } catch (error) {\n//     throw error;\n//   }\n// }\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}