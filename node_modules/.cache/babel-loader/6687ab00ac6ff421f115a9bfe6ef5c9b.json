{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { API, cohortName, registerNew } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let regInfo = {\n      user: {\n        username: `${username}`,\n        password: `${password}`\n      }\n    };\n    console.log(username);\n    console.log(password);\n    console.log(confirmPassword);\n    console.log(regInfo);\n    setPassword(\"\");\n    setUsername(\"\");\n    await registerNew({\n      url: \"/users/register\",\n      method: \"POST\",\n      token: localStorage.getItem(\"myToken\"),\n      body: regInfo\n    });\n  };\n\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"confirm-password\",\n        children: \"Confirm Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: confirmPassword,\n        onChange: handleConfirmPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"register\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"rdm1APKdkVgeD/89w0q4MU079tk=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Register.js"],"names":["useState","API","cohortName","registerNew","Register","props","handleSubmit","event","preventDefault","regInfo","user","username","password","console","log","confirmPassword","setPassword","setUsername","url","method","token","localStorage","getItem","body","handleConfirmPasswordChange","setConfirmPassword","target","value","handlePasswordChange","handleUsernameChange"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,WAA1B,QAA6C,QAA7C;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAMC,YAAY,GAAG,MAAOC,KAAP,IAAiB;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,OAAO,GAAG;AAChBC,MAAAA,IAAI,EAAE;AACFC,QAAAA,QAAQ,EAAG,GAAEA,QAAS,EADpB;AAEFC,QAAAA,QAAQ,EAAG,GAAEA,QAAS;AAFpB;AADU,KAAd;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYC,eAAZ;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,OAAZ;AACAO,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAC,IAAAA,WAAW,CAAC,EAAD,CAAX;AACA,UAAMd,WAAW,CAAC;AAAEe,MAAAA,GAAG,EAAE,iBAAP;AAA0BC,MAAAA,MAAM,EAAE,MAAlC;AAA0CC,MAAAA,KAAK,EAACC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAhD;AAAiFC,MAAAA,IAAI,EAACd;AAAtF,KAAD,CAAjB;AACH,GAfD;;AAgBA,QAAMe,2BAA2B,GAAIjB,KAAD,IAAU;AAC1CkB,IAAAA,kBAAkB,CAAClB,KAAK,CAACmB,MAAN,CAAaC,KAAd,CAAlB;AACH,GAFD;;AAGA,QAAMC,oBAAoB,GAAIrB,KAAD,IAAU;AACnCS,IAAAA,WAAW,CAACT,KAAK,CAACmB,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAGA,QAAME,oBAAoB,GAAItB,KAAD,IAAU;AACnCU,IAAAA,WAAW,CAACV,KAAK,CAACmB,MAAN,CAAaC,KAAd,CAAX;AACH,GAFD;;AAGA,QAAM,CAAChB,QAAD,EAAWM,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,QAAD,EAAWI,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,eAAD,EAAkBU,kBAAlB,IAAwCzB,QAAQ,CAAC,EAAD,CAAtD;AACA,sBACI;AAAK,IAAA,EAAE,EAAE,UAAT;AAAA,2BACA;AAAM,MAAA,QAAQ,EAAEM,YAAhB;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAoB,QAAA,IAAI,EAAC,UAAzB;AAAoC,QAAA,KAAK,EAAEK,QAA3C;AAAqD,QAAA,QAAQ,EAAEkB;AAA/D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEjB,QAA1C;AAAoD,QAAA,QAAQ,EAAEgB;AAA9D;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,OAAO,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,KAAK,EAAEb,eAA1C;AAA2D,QAAA,QAAQ,EAAES;AAArE;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAQ,QAAA,IAAI,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA5CD;;GAAMpB,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\"\nimport { API, cohortName, registerNew } from \"../api\"\n\n\nconst Register = (props) => {\n   \n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        let regInfo = {\n      user: {\n          username: `${username}`,\n          password: `${password}`\n      }\n        }\n        console.log(username)\n        console.log(password)\n        console.log(confirmPassword)\n        console.log(regInfo)\n        setPassword(\"\")\n        setUsername(\"\")\n        await registerNew({ url: \"/users/register\", method: \"POST\", token:localStorage.getItem(\"myToken\"), body:regInfo })\n    }\n    const handleConfirmPasswordChange = (event) =>{\n        setConfirmPassword(event.target.value)\n    }\n    const handlePasswordChange = (event) =>{\n        setPassword(event.target.value)\n    }\n    const handleUsernameChange = (event) =>{\n        setUsername(event.target.value)\n    }\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    return (\n        <div id =\"register\">\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">Username:</label>\n            <input type=\"text\"  name=\"username\" value={username} onChange={handleUsernameChange}/>\n            <label htmlFor=\"password\">Password:</label>\n            <input type=\"text\" name=\"password\" value={password} onChange={handlePasswordChange}/>\n            <label htmlFor=\"confirm-password\">Confirm Password:</label>\n            <input type=\"text\" name=\"password\" value={confirmPassword} onChange={handleConfirmPasswordChange}/>\n            <button type=\"register\">Register</button>\n        </form>\n    </div>\n   \n)\n}\n\n\n\nexport default Register"]},"metadata":{},"sourceType":"module"}