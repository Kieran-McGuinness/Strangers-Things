{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/CreateMessage.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { sendMessage } from \"../api\";\nimport { callApi } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateMessage = props => {\n  _s();\n\n  const postId = props.postId;\n  const [message, setMessage] = useState(\"\");\n\n  const handleMessageSubmit = async event => {\n    event.preventDefault();\n\n    if (message === \"\") {\n      document.getElementById(\"float\").className = \"visible\";\n      document.getElementById(\"float\").innerText = \"Message Cannot Be Blank\";\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n      setMessage(\"\");\n      setClicked(false);\n    } else {\n      let messageInfo = {\n        message: {\n          content: `${message}`\n        }\n      };\n      console.log(message);\n      console.log(postId);\n      const data = await callApi({\n        url: `/posts/${postId}/messages`,\n        method: \"post\",\n        token: localStorage.getItem(\"myToken\"),\n        body: messageInfo\n      });\n      setMessage(\"\");\n      setClicked(false);\n\n      if (data.success) {\n        document.getElementById(\"float\").className = \"visible\";\n        document.getElementById(\"float\").innerText(\"Message Sent\");\n        setTimeout(function () {\n          document.getElementById(\"float\").className = \"hidden\";\n        }, 5000);\n      }\n    }\n  };\n\n  const handleMessageChange = event => {\n    setMessage(event.target.value);\n  };\n\n  const [clicked, setClicked] = useState(false);\n\n  const displayMessageForm = () => {\n    console.log(\"clicked\");\n    setClicked(true);\n  };\n\n  return clicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleMessageSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"message\",\n        children: \"Message:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"message\",\n        value: message,\n        onChange: handleMessageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: displayMessageForm,\n    children: \"Send Message\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this) // {/* <div>\n  //     <form onSubmit={handleMessageSubmit}>\n  //         <label htmlFor=\"message\">Message:</label>\n  //         <input type=\"text\" name=\"message\" value={message} onChange={handleMessageChange}/>\n  //         <button type=\"submit\">Send Message</button>\n  //     </form>\n  // </div> */}\n  ;\n};\n\n_s(CreateMessage, \"1wAPJ6DFVn1m6lnGyieT96Ev3AA=\");\n\n_c = CreateMessage;\nexport default CreateMessage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateMessage\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/CreateMessage.js"],"names":["useEffect","useState","sendMessage","callApi","CreateMessage","props","postId","message","setMessage","handleMessageSubmit","event","preventDefault","document","getElementById","className","innerText","setTimeout","setClicked","messageInfo","content","console","log","data","url","method","token","localStorage","getItem","body","success","handleMessageChange","target","value","clicked","displayMessageForm"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { sendMessage } from \"../api\"\nimport { callApi } from \"../api\"\n\nconst CreateMessage = (props) =>{\n    const postId = props.postId\n    const [message, setMessage] = useState(\"\")\n    const handleMessageSubmit = async (event) => {\nevent.preventDefault()\nif(message === \"\"){\n    document.getElementById(\"float\").className=\"visible\";\n    document.getElementById(\"float\").innerText = \"Message Cannot Be Blank\"\n    setTimeout(function(){\n        document.getElementById(\"float\").className=\"hidden\";\n    },5000)\n    setMessage(\"\")\nsetClicked(false)\n} else {\nlet messageInfo = {\n    message: {\n        content: `${message}`\n    }\n}\nconsole.log(message)\nconsole.log(postId)\nconst data = await callApi({ url:`/posts/${postId}/messages`, method: \"post\", token: localStorage.getItem(\"myToken\"), body: messageInfo })\nsetMessage(\"\")\nsetClicked(false)\nif(data.success){\n    document.getElementById(\"float\").className=\"visible\"\n    document.getElementById(\"float\").innerText(\"Message Sent\")\n    setTimeout(function(){\n        document.getElementById(\"float\").className=\"hidden\";\n    },5000)\n}\n}\n    }\n\nconst handleMessageChange = (event) =>{\n    setMessage(event.target.value)\n}\nconst [clicked, setClicked] = useState(false) \nconst displayMessageForm = () =>{\n    console.log(\"clicked\")\n    setClicked(true)\n  \n\n}\n\n\n    return (\n        clicked ?\n        <div>\n    <form onSubmit={handleMessageSubmit}>\n        <label htmlFor=\"message\">Message:</label>\n        <input type=\"text\" name=\"message\" value={message} onChange={handleMessageChange}/>\n        <button type=\"submit\">Send Message</button>\n    </form>\n</div>: \n        <button onClick={displayMessageForm}>Send Message</button>\n// {/* <div>\n//     <form onSubmit={handleMessageSubmit}>\n//         <label htmlFor=\"message\">Message:</label>\n//         <input type=\"text\" name=\"message\" value={message} onChange={handleMessageChange}/>\n//         <button type=\"submit\">Send Message</button>\n//     </form>\n// </div> */}\n    )\n}\n\n\nexport default CreateMessage"]},"metadata":{},"sourceType":"module"}