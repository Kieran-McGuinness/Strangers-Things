{"ast":null,"code":"import { useState } from \"react\";\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`; // export const [authToken, setAuthToken] = useState(\"\")\n\nexport async function getPosts() {\n  try {\n    const response = localStorage.getItem(\"myToken\") ? await fetch(`${API}/posts`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    }) : await fetch(`${API}/posts`);\n    const result = await response.json(); // console.log(result)\n\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function registerNew(regInfo) {\n  try {\n    const response = await fetch(`${API}/users/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(regInfo)\n    });\n    const result = await response.json();\n    console.log(result);\n  } catch (error) {\n    console.error('could not register', error);\n  }\n}\n;\nexport function loginUser(loginInfo) {\n  return fetch(`${API}/users/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginInfo)\n  }).then(response => response.json()).then(result => {\n    result.data.token ? localStorage.setItem(\"myToken\", result.data.token) : console.log(result);\n    return result;\n  }).catch(console.error);\n}\nexport async function createPost(postInfo) {\n  fetch(`${API}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n    },\n    body: JSON.stringify(postInfo)\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    return result;\n  }).catch(console.error);\n}\nexport async function deletePost() {\n  try {\n    const response = await fetch(`${API}/posts/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    });\n    const result = await response.json(); // console.log(result)\n\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/api/index.js"],"names":["useState","cohortName","API","getPosts","response","localStorage","getItem","fetch","headers","result","json","error","registerNew","regInfo","method","body","JSON","stringify","console","log","loginUser","loginInfo","then","data","token","setItem","catch","createPost","postInfo","deletePost","postId"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,MAAMC,UAAU,GAAG,iBAAnB;AACP,OAAO,MAAMC,GAAG,GAAI,8CAA6CD,UAAW,EAArE,C,CAGP;;AAEA,OAAO,eAAeE,QAAf,GAA0B;AAC7B,MAAI;AACF,UAAMC,QAAQ,GAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,IAElB,MAAMC,KAAK,CAAE,GAAEL,GAAI,QAAR,EAAiB;AAC1BM,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEV,yBAAkB,UAASH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFjD;AADiB,KAAjB,CAFO,GASlB,MAAMC,KAAK,CAAE,GAAEL,GAAI,QAAR,CATX;AAWA,UAAMO,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB,CAZE,CAaF;;AACA,WAAOD,MAAP;AACD,GAfD,CAeE,OAAOE,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;AAGD,OAAO,eAAeC,WAAf,CAA4BC,OAA5B,EAAqC;AAC1C,MAAG;AACD,UAAMT,QAAQ,GAAG,MAAMG,KAAK,CAAE,GAAEL,GAAI,iBAAR,EAC5B;AACEY,MAAAA,MAAM,EAAE,MADV;AAEEN,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFX;AAKEO,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJJ,OADI;AALR,KAD4B,CAA5B;AAWA,UAAMJ,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACD,GAdD,CAcE,OAAOE,KAAP,EAAa;AACbO,IAAAA,OAAO,CAACP,KAAR,CAAc,oBAAd,EAAoCA,KAApC;AACD;AACF;AAAA;AAED,OAAO,SAASS,SAAT,CAAoBC,SAApB,EAA8B;AACrC,SAAOd,KAAK,CAAE,GAAEL,GAAI,cAAR,EAAsB;AAC/BY,IAAAA,MAAM,EAAE,MADuB;AAE/BN,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFsB;AAK/BO,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAEJI,SAFI;AALyB,GAAtB,CAAL,CAUJC,IAVI,CAUClB,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAVb,EAWLY,IAXK,CAWAb,MAAM,IAAG;AACbA,IAAAA,MAAM,CAACc,IAAP,CAAYC,KAAZ,GAAoBnB,YAAY,CAACoB,OAAb,CAAqB,SAArB,EAAgChB,MAAM,CAACc,IAAP,CAAYC,KAA5C,CAApB,GAAwEN,OAAO,CAACC,GAAR,CAAYV,MAAZ,CAAxE;AACA,WAAOA,MAAP;AACD,GAdK,EAcHiB,KAdG,CAcGR,OAAO,CAACP,KAdX,CAAP;AAeA;AAGD,OAAO,eAAegB,UAAf,CAA2BC,QAA3B,EAAoC;AAC1CrB,EAAAA,KAAK,CAAE,GAAEL,GAAI,QAAR,EAAgB;AAClBY,IAAAA,MAAM,EAAE,MADU;AAElBN,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFpD,KAFS;AAMlBS,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAEJW,QAFI;AANY,GAAhB,CAAL,CAWGN,IAXH,CAWQlB,QAAQ,IAAIA,QAAQ,CAACM,IAAT,EAXpB,EAYEY,IAZF,CAYOb,MAAM,IAAG;AACbS,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACA,WAAOA,MAAP;AACD,GAfF,EAeIiB,KAfJ,CAeUR,OAAO,CAACP,KAflB;AAgBA;AAGD,OAAO,eAAekB,UAAf,GAA4B;AAClC,MAAI;AACF,UAAMzB,QAAQ,GAAI,MAAMG,KAAK,CAAE,GAAEL,GAAI,UAAS4B,MAAO,EAAxB,EAA2B;AACtDhB,MAAAA,MAAM,EAAG,QAD6C;AAEtDN,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEV,yBAAkB,UAASH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFjD;AAF6C,KAA3B,CAA7B;AAQA,UAAMG,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAT,EAArB,CATE,CAUF;;AACA,WAAOD,MAAP;AACD,GAZD,CAYE,OAAOE,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF","sourcesContent":["import { useState } from \"react\";\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n\n// export const [authToken, setAuthToken] = useState(\"\")\n\nexport async function getPosts() {\n    try {\n      const response =  localStorage.getItem(\"myToken\")\n      ? \n      await fetch(`${API}/posts`, {\n        headers: {\n          'Content-Type': 'application/json',\n       'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n        }\n      })\n      :\n      await fetch(`${API}/posts`)\n      ;\n      const result = await response.json();\n      // console.log(result)\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n\n  export async function registerNew (regInfo) {\n    try{\n      const response = await fetch(`${API}/users/register`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n          regInfo\n          ),\n      }\n      );\n      const result = await response.json();\n      console.log(result);\n    } catch (error){\n      console.error('could not register', error)\n    }\n  };\n\n  export function loginUser (loginInfo){\n  return fetch(`${API}/users/login`,{\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json'\n     },\n     body: JSON.stringify\n     (\n       loginInfo\n       ),\n   }\n   ).then(response => response.json())\n   .then(result =>{\n     result.data.token ? localStorage.setItem(\"myToken\", result.data.token): console.log(result);\n     return result;\n   }).catch(console.error);\n }\n  \n\n export async function createPost (postInfo){\n  fetch(`${API}/posts`,{\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n       'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n     },\n     body: JSON.stringify\n     (\n       postInfo\n       ),\n   }\n   ).then(response => response.json())\n   .then(result =>{\n     console.log(result)\n     return result;\n   }).catch(console.error);\n }\n\n\n export async function deletePost() {\n  try {\n    const response =  await fetch(`${API}/posts/${postId}`, {\n      method:  'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    })\n    ;\n    const result = await response.json();\n    // console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}"]},"metadata":{},"sourceType":"module"}