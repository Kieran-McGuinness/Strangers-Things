{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { CreateMessage, CreatePost, IndividualPost } from '.';\nimport { getPosts } from '../api';\nimport { callApi } from '../api';\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\nimport DeletePost from './DeletePost';\nimport EditPost from './EditPost';\nimport Search from './Search';\nimport Badge from '@mui/material/Badge';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const postsToDisplay = props.postsToDisplay;\n  const setPostsToDisplay = props.setPostsToDisplay;\n  const loadedPosts = props.loadedPosts;\n  const setLoadedPosts = props.setLoadedPosts;\n  useEffect(() => {\n    callApi({\n      url: \"/posts\",\n      token: localStorage.getItem(\"myToken\")\n    }).then(result => {\n      setLoadedPosts(result.data.posts);\n      setPostsToDisplay(result.data.posts);\n      console.log(result);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"postspage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postsandcreate\",\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        setLoadedPosts: setLoadedPosts,\n        loadedPosts: loadedPosts,\n        setPostsToDisplay: setPostsToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"poststitle\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          loadedPosts: loadedPosts,\n          setPostsToDisplay: setPostsToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 12\n        }, this), postsToDisplay.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"indvPosts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Posted by: \", item.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted on: \", item.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", item.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", item.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Will Deliver: \", JSON.stringify(item.willDeliver)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            sx: {\n              borderBottomWidth: 2\n            },\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), (() => {\n            if (item.isAuthor && item.messages.length) {\n              return /*#__PURE__*/_jsxDEV(Badge, {\n                sx: {\n                  mt: 1.2\n                },\n                badgeContent: item.messages.length,\n                color: \"primary\",\n                children: /*#__PURE__*/_jsxDEV(MailIcon, {\n                  color: \"action\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 7\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this) // <h3>You have {item.messages.length} messages</h3>\n              // item.messages.map( (messages, index) => <div key={\"message\" + messages.post._id + index}>\n              //   <p>Messages:{messages.content}</p>\n              // </div>)\n              ;\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n            }\n          })(), item.isAuthor ? /*#__PURE__*/_jsxDEV(IndividualPost, {\n            loadedPosts: loadedPosts,\n            postId: item._id,\n            index: index,\n            setPostsToDisplay: setPostsToDisplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), (() => {\n            if (localStorage.getItem(\"myToken\") && !item.isAuthor) {\n              return /*#__PURE__*/_jsxDEV(CreateMessage, {\n                postId: item._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 12\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n            }\n          })()]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Posts.js"],"names":["React","useEffect","useState","CreateMessage","CreatePost","IndividualPost","getPosts","callApi","cohortName","API","DeletePost","EditPost","Search","Badge","MailIcon","Divider","Posts","props","postsToDisplay","setPostsToDisplay","loadedPosts","setLoadedPosts","url","token","localStorage","getItem","then","result","data","posts","console","log","catch","error","map","item","index","title","author","username","createdAt","price","description","location","JSON","stringify","willDeliver","borderBottomWidth","isAuthor","messages","length","mt","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { CreateMessage, CreatePost, IndividualPost } from '.';\nimport { getPosts } from '../api';\nimport { callApi } from '../api';\n\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\nimport DeletePost from './DeletePost';\nimport  EditPost  from './EditPost';\nimport Search from './Search';\nimport Badge from '@mui/material/Badge';\nimport MailIcon from '@mui/icons-material/Mail'\nimport { Divider } from '@mui/material';\n\nconst Posts= (props) => {\nconst postsToDisplay= props.postsToDisplay\nconst setPostsToDisplay= props.setPostsToDisplay\nconst loadedPosts = props.loadedPosts\nconst setLoadedPosts= props.setLoadedPosts\n\n\n useEffect(() => {\n  callApi({ url:\"/posts\",token:localStorage.getItem(\"myToken\")}).then(result=>{\n    setLoadedPosts(result.data.posts)\n    setPostsToDisplay(result.data.posts)\n    console.log(result)\n  }).catch(error=>{\n    console.error(error)\n  })}, []); \n\n    \n  \n    return (\n        <div id= \"postspage\">\n           <div id =\"postsandcreate\">\n           <CreatePost setLoadedPosts={setLoadedPosts} loadedPosts={loadedPosts} setPostsToDisplay={setPostsToDisplay}/>\n           \n           <div id = \"posts\">\n           <h1 id=\"poststitle\">Posts</h1>\n           <Search loadedPosts={loadedPosts} setPostsToDisplay={setPostsToDisplay}/>\n          {postsToDisplay.map((item, index) => \n          <div key={item._id} className='indvPosts'>\n          <h2>{item.title}</h2>\n          <h3>Posted by: {item.author.username}</h3>\n          <p>Posted on: {item.createdAt}</p>\n          <p>Price: {item.price}</p>\n          <p>Description: {item.description}</p>\n          <p>Location: {item.location}</p>\n          <p>Will Deliver: {JSON.stringify(item.willDeliver)}</p>\n          <Divider sx={{ borderBottomWidth: 2 }} component=\"li\" />\n            {(() => {\n              if (item.isAuthor && (item.messages.length)){\n                return (\n                  <Badge sx={{mt:1.2}} badgeContent={item.messages.length} color=\"primary\">\n      <MailIcon color=\"action\" />\n    </Badge>\n                  // <h3>You have {item.messages.length} messages</h3>\n                  // item.messages.map( (messages, index) => <div key={\"message\" + messages.post._id + index}>\n                  //   <p>Messages:{messages.content}</p>\n                  // </div>)\n                )\n              } else {\n                return (\n                  <></>\n                )\n              }\n            })()} \n\n          {/* {item.isAuthor ? <DeletePost postId={item._id} setLoadedPosts={setLoadedPosts} \n          loadedPosts={loadedPosts} setPostsToDisplay={setPostsToDisplay}/>: <></>} */}\n           {item.isAuthor ? <IndividualPost loadedPosts={loadedPosts} postId={item._id}index={index} setPostsToDisplay={setPostsToDisplay}/>: <></>}\n          {/* {item.isAuthor ? <EditPost />: <p></p>} */}\n\n          {(() => {\n        if (localStorage.getItem(\"myToken\")&& !(item.isAuthor)) {\n          return (\n           <CreateMessage postId={item._id} />\n          )\n        } else {\n          return (\n            <></>\n          )\n        }\n      })()}    \n          </div>\n          )}\n           </div>\n           </div>\n        </div>\n      \n        \n    )\n    \n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}