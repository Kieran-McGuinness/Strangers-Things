{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const loadedPosts = props.loadedPosts;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function postMatches(post, term) {\n    return post.toLowerCase().includes(term.toLowerCase()); // post.map(posts => posts.description.toLowerCase().includes(term.toLowerCase()))\n    // post.map(posts => posts.title.toLowerCase().includes(term.toLowerCase()))\n    // post.map(posts => posts.location.toLowerCase().includes(term.toLowerCase()))\n    // post.map(posts => posts.author.username.toLowerCase().includes(term.toLowerCase()))\n  }\n\n  const filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\n  const postsToDisplay = searchTerm.length ? filteredPosts : loadedPosts;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"site-search\",\n      children: \"Search Posts:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      id: \"site-search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 1\n  }, this);\n};\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Search;\nexport default Search;\ndata.author.username;\ndata.description;\ndata.title;\ndata.location;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js"],"names":["useState","Search","props","loadedPosts","searchTerm","setSearchTerm","postMatches","post","term","toLowerCase","includes","filteredPosts","filter","postsToDisplay","length","data","author","username","description","title","location"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAU;AAAA;;AACzB,QAAMC,WAAW,GAAGD,KAAK,CAACC,WAA1B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,EAAD,CAA5C;;AACA,WAASM,WAAT,CAAqBC,IAArB,EAA4BC,IAA5B,EAAiC;AAC7B,WAAOD,IAAI,CAACE,WAAL,GAAmBC,QAAnB,CAA4BF,IAAI,CAACC,WAAL,EAA5B,CAAP,CAD6B,CAEjC;AACA;AACA;AACA;AACC;;AACD,QAAME,aAAa,GAAGR,WAAW,CAACS,MAAZ,CAAmBL,IAAI,IAAID,WAAW,CAACC,IAAD,EAAOH,UAAP,CAAtC,CAAtB;AACA,QAAMS,cAAc,GAAGT,UAAU,CAACU,MAAX,GAAoBH,aAApB,GAAoCR,WAA3D;AAEI,sBACJ;AAAA,4BACI;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAO,MAAA,IAAI,EAAE,QAAb;AAAsB,MAAA,EAAE,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADI;AAMH,CAnBD;;GAAMF,M;;KAAAA,M;AAuBN,eAAeA,MAAf;AAEAc,IAAI,CAACC,MAAL,CAAYC,QAAZ;AACAF,IAAI,CAACG,WAAL;AACAH,IAAI,CAACI,KAAL;AACAJ,IAAI,CAACK,QAAL","sourcesContent":["import { useState } from \"react\"\n\nconst Search = (props) =>{\nconst loadedPosts = props.loadedPosts\nconst [searchTerm, setSearchTerm] = useState(\"\")\nfunction postMatches(post , term){\n    return post.toLowerCase().includes(term.toLowerCase())\n// post.map(posts => posts.description.toLowerCase().includes(term.toLowerCase()))\n// post.map(posts => posts.title.toLowerCase().includes(term.toLowerCase()))\n// post.map(posts => posts.location.toLowerCase().includes(term.toLowerCase()))\n// post.map(posts => posts.author.username.toLowerCase().includes(term.toLowerCase()))\n}\nconst filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\nconst postsToDisplay = searchTerm.length ? filteredPosts : loadedPosts\n\n    return (\n<div>\n    <label htmlFor=\"site-search\">Search Posts:</label>\n    <input type =\"search\" id=\"site-search\"/> \n</div>\n    )\n}\n\n\n\nexport default Search\n\ndata.author.username\ndata.description\ndata.title\ndata.location"]},"metadata":{},"sourceType":"module"}