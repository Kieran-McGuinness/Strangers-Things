{"ast":null,"code":"import { useState } from \"react\";\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`; // export const [authToken, setAuthToken] = useState(\"\")\n\nexport async function getPosts() {\n  try {\n    const response = localStorage.getItem(\"myToken\") ? await fetch(`${API}/posts`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    }) : await fetch(`${API}/posts`);\n    const result = await response.json(); // console.log(result)\n\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function registerNew(regInfo) {\n  try {\n    const response = await fetch(`${API}/users/register`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(regInfo)\n    });\n    const result = await response.json();\n    console.log(result);\n  } catch (error) {\n    console.error('could not register', error);\n  }\n}\n;\nexport function loginUser(loginInfo) {\n  return fetch(`${API}/users/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(loginInfo)\n  }).then(response => response.json()).then(result => {\n    result.data.token ? localStorage.setItem(\"myToken\", result.data.token) : console.log(result);\n    return result;\n  }).catch(console.error);\n}\nexport function createPost(postInfo) {\n  return fetch(`${API}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n    },\n    body: JSON.stringify(postInfo)\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    return result;\n  }).catch(console.error);\n}\nexport async function deletePost(postId) {\n  try {\n    const response = await fetch(`${API}/posts/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getMe() {\n  try {\n    const response = localStorage.getItem(\"myToken\") ? await fetch(`${API}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    }) : await fetch(`${API}/users/me`);\n    const result = await response.json(); // console.log(result)\n\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function sendMessage(messageInfo, postId) {\n  try {\n    const response = await fetch(`${API}/posts/${postId}/messages`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify(messageInfo)\n    });\n    const result = await response.json();\n    return results;\n    console.log(result);\n  } catch (error) {\n    console.error('could not send message', error);\n  }\n}\n;\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\nexport const callApi = async _ref => {\n  let {\n    url,\n    method,\n    token,\n    body\n  } = _ref;\n  console.log({\n    url,\n    method,\n    token,\n    body\n  });\n\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    } // console.log('request url: ', REACT_APP_BASE_URL + url)\n    // console.log('options: ', options);\n\n\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json(); // console.log('data: ', data);\n\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n}; // REACT_APP_BASE_URL = https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT\n// node app.js\n// process.env.REACT_APP_BASE_URL","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/api/index.js"],"names":["useState","cohortName","API","getPosts","response","localStorage","getItem","fetch","headers","result","json","error","registerNew","regInfo","method","body","JSON","stringify","console","log","loginUser","loginInfo","then","data","token","setItem","catch","createPost","postInfo","deletePost","postId","getMe","sendMessage","messageInfo","results","REACT_APP_BASE_URL","process","env","callApi","url","options","toUpperCase"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n\n// export const [authToken, setAuthToken] = useState(\"\")\n\nexport async function getPosts() {\n    try {\n      const response =  localStorage.getItem(\"myToken\")\n      ? \n      await fetch(`${API}/posts`, {\n        headers: {\n          'Content-Type': 'application/json',\n       'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n        }\n      })\n      :\n      await fetch(`${API}/posts`)\n      ;\n      const result = await response.json();\n      // console.log(result)\n      return result;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n\n  export async function registerNew (regInfo) {\n    try{\n      const response = await fetch(`${API}/users/register`,\n      {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(\n          regInfo\n          ),\n      }\n      );\n      const result = await response.json();\n      console.log(result);\n    } catch (error){\n      console.error('could not register', error)\n    }\n  };\n\n  export function loginUser (loginInfo){\n  return fetch(`${API}/users/login`,{\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json'\n     },\n     body: JSON.stringify\n     (\n       loginInfo\n       ),\n   }\n   ).then(response => response.json())\n   .then(result =>{\n     result.data.token ? localStorage.setItem(\"myToken\", result.data.token): console.log(result);\n     return result;\n   }).catch(console.error);\n }\n  \n\n export function createPost (postInfo){\n  return fetch(`${API}/posts`,{\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n       'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n     },\n     body: JSON.stringify\n     (\n       postInfo\n       ),\n   }\n   ).then(response => response.json())\n   .then(result =>{\n     console.log(result)\n     return result;\n   }).catch(console.error);\n }\n\n\n export async function deletePost(postId) {\n  try {\n    const response =  await fetch(`${API}/posts/${postId}`, {\n      method:  'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    })\n    ;\n    const result = await response.json();\n    console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMe() {\n  try {\n    const response =  localStorage.getItem(\"myToken\")\n    ? \n    await fetch(`${API}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    })\n    :\n    await fetch(`${API}/users/me`)\n    ;\n    const result = await response.json();\n    // console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\nexport async function sendMessage (messageInfo, postId) {\n  try{\n    const response = await fetch(`${API}/posts/${postId}/messages`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify(\n        messageInfo\n        ),\n    }\n    );\n    const result = await response.json();\n    return results\n    console.log(result);\n  } catch (error){\n    console.error('could not send message', error)\n  }\n};\n\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nexport const callApi = async ({ url, method, token, body }) => {\n  console.log({ url, method, token, body })\n  try {\n\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n    // console.log('request url: ', REACT_APP_BASE_URL + url)\n    // console.log('options: ', options);\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json();\n    // console.log('data: ', data);\n    if (data.error) throw data.error;\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n  }\n}\n\n\n// REACT_APP_BASE_URL = https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT\n// node app.js\n\n// process.env.REACT_APP_BASE_URL"]},"metadata":{},"sourceType":"module"}