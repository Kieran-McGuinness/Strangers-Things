{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { callApi } from \"../api\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { buttonBaseClasses } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = props => {\n  _s();\n\n  const history = useHistory();\n  const [editClicked, setEditClicked] = useState(false);\n  const id = props.id;\n  const indPost = props.indPost;\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n\n  const clickButton = event => {\n    // sets form values to those of post that is being edited\n    setDescription(indPost[0].description);\n    setLocation(indPost[0].location);\n    setPrice(indPost[0].price);\n    setTitle(indPost[0].title);\n    setWillDeliver(indPost[0].willDeliver);\n    setEditClicked(true);\n  };\n\n  const handleSubmitEdit = async event => {\n    // creates object with edited posts and sends it with key, url and method to api\n    event.preventDefault();\n    let editedInfo = {\n      post: {\n        title: `${title}`,\n        description: `${description}`,\n        price: `${price}`,\n        location: `${location}`,\n        willDeliver: `${willDeliver}`\n      }\n    };\n    const results = await callApi({\n      url: `/posts/${id}`,\n      method: \"patch\",\n      token: localStorage.getItem(\"myToken\"),\n      body: editedInfo\n    });\n\n    if (results.success) {\n      // if api fetch is succesfull displays a success message and redirects to posts pages\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = \"Post has been updated\";\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n    } // console.log(editedInfo, id)\n    // console.log(results)\n\n\n    history.push(\"/posts\");\n  }; // functions that handle form value changes\n\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n\n  const handlePriceChange = event => {\n    setPrice(event.target.value);\n  };\n\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleWillDeliverChange = event => {\n    setWillDeliver(event.target.checked);\n  };\n\n  return (// generates an edit post button, once clicked generates the edit post form and submit button\n    editClicked ? /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"editpost\",\n      onSubmit: handleSubmitEdit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"editdescription\",\n        label: \"Description\",\n        value: description,\n        variant: \"standard\",\n        onChange: handleDescriptionChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"editlocation\",\n        label: \"Location:\",\n        value: location,\n        variant: \"standard\",\n        onChange: handleLocationChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"editprice\",\n        label: \"Price:\",\n        value: price,\n        variant: \"standard\",\n        onChange: handlePriceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"edittitle\",\n        label: \"Title\",\n        value: title,\n        variant: \"standard\",\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          value: willDeliver,\n          onChange: handleWillDeliverChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 44\n        }, this),\n        label: \"Will Deliver\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        id: \"submiteditpostbtn\",\n        sx: {\n          mb: .5\n        },\n        variant: \"contained\",\n        color: \"success\",\n        size: \"small\",\n        type: \"submit\",\n        children: \"Submit Edited Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"editpost\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"small\",\n        color: \"success\",\n        startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 85\n        }, this),\n        onClick: clickButton,\n        children: \"Edit Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  );\n};\n\n_s(EditPost, \"ScRHXhRNt8+IOvAlEk8mt/x02xQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditPost;\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/EditPost.js"],"names":["useHistory","useState","callApi","DeleteIcon","Box","TextField","Button","FormControlLabel","Checkbox","buttonBaseClasses","EditPost","props","history","editClicked","setEditClicked","id","indPost","description","setDescription","location","setLocation","price","setPrice","title","setTitle","willDeliver","setWillDeliver","clickButton","event","handleSubmitEdit","preventDefault","editedInfo","post","results","url","method","token","localStorage","getItem","body","success","document","getElementsByClassName","className","getElementById","innerText","setTimeout","push","handleDescriptionChange","target","value","handleLocationChange","handlePriceChange","handleTitleChange","handleWillDeliverChange","checked","mb"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport { callApi } from \"../api\"\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { buttonBaseClasses } from \"@mui/material\";\n\n\nconst EditPost = (props) => {\n    const history = useHistory()\n    const [editClicked, setEditClicked] = useState(false)\n    const id = props.id\n    const indPost = props.indPost\n    const [description, setDescription] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [willDeliver, setWillDeliver] = useState(false)\n    const clickButton = (event) => {\n        // sets form values to those of post that is being edited\n        setDescription(indPost[0].description)\n        setLocation(indPost[0].location)\n        setPrice(indPost[0].price)\n        setTitle(indPost[0].title)\n        setWillDeliver(indPost[0].willDeliver)\n        setEditClicked(true)\n    }\n\n    const handleSubmitEdit = async (event) => {\n        // creates object with edited posts and sends it with key, url and method to api\n        event.preventDefault()\n        let editedInfo = {\n            post: {\n                title: `${title}`,\n                description: `${description}`,\n                price: `${price}`,\n                location: `${location}`,\n                willDeliver: `${willDeliver}`\n            }\n        }\n        const results = await callApi({ url: `/posts/${id}`, method: \"patch\", token: localStorage.getItem(\"myToken\"), body: editedInfo })\n        if (results.success) {\n            // if api fetch is succesfull displays a success message and redirects to posts pages\n            document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n            document.getElementById(\"float\").innerText = \"Post has been updated\"\n            setTimeout(function () {\n                document.getElementById(\"float\").className = \"hidden\";\n            }, 5000)\n        }\n        // console.log(editedInfo, id)\n        // console.log(results)\n        history.push(\"/posts\")\n    }\n\n    // functions that handle form value changes\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value)\n    }\n    const handleLocationChange = (event) => {\n        setLocation(event.target.value)\n    }\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value)\n    }\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value)\n    }\n    const handleWillDeliverChange = (event) => {\n        setWillDeliver(event.target.checked)\n    }\n\n    return (\n        // generates an edit post button, once clicked generates the edit post form and submit button\n        editClicked ?\n            <Box component=\"form\" noValidate autoComplete=\"off\" id=\"editpost\" onSubmit={handleSubmitEdit}>\n                <TextField\n                    required\n                    id=\"editdescription\"\n                    label=\"Description\"\n                    value={description}\n                    variant=\"standard\"\n                    onChange={handleDescriptionChange}\n                />\n                <TextField\n                    required\n                    id=\"editlocation\"\n                    label=\"Location:\"\n                    value={location}\n                    variant=\"standard\"\n                    onChange={handleLocationChange}\n                />\n                <TextField\n                    required\n                    id=\"editprice\"\n                    label=\"Price:\"\n                    value={price}\n                    variant=\"standard\"\n                    onChange={handlePriceChange}\n                />\n                <TextField\n                    required\n                    id=\"edittitle\"\n                    label=\"Title\"\n                    value={title}\n                    variant=\"standard\"\n                    onChange={handleTitleChange}\n                />\n                <FormControlLabel control={<Checkbox value={willDeliver} onChange={handleWillDeliverChange} />} label=\"Will Deliver\" />\n                <Button id=\"submiteditpostbtn\" sx={{ mb: .5 }} variant=\"contained\" color=\"success\" size=\"small\" type=\"submit\">Submit Edited Post</Button>\n            </Box>\n            :\n            <div id=\"editpost\">\n                <Button variant=\"contained\" size=\"small\" color=\"success\" startIcon={<DeleteIcon />} onClick={clickButton}>Edit Post</Button>\n            </div>\n\n    )\n}\n\n\nexport default EditPost"]},"metadata":{},"sourceType":"module"}