{"ast":null,"code":"import _slicedToArray from\"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Search=function Search(props){var setPostsToDisplay=props.setPostsToDisplay;var loadedPosts=props.loadedPosts;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];function postMatches(post,term){if(post.description.toLowerCase().includes(term.toLowerCase())||post.title.toLowerCase().includes(term.toLowerCase())||post.location.toLowerCase().includes(term.toLowerCase())||post.author.username.toLowerCase().includes(term.toLowerCase())){return true;}}var handleSearchChange=function handleSearchChange(event){setSearchTerm(event.target.value);};var handleSubmitSearch=function handleSubmitSearch(event){var filteredPosts=loadedPosts.filter(function(post){return postMatches(post,searchTerm);});setPostsToDisplay(searchTerm.length?filteredPosts:loadedPosts);event.preventDefault();console.log(searchTerm);setSearchTerm(\"\");};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitSearch,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"site-search\",children:\"Search Posts:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"search\",id:\"site-search\",onChange:handleSearchChange,value:searchTerm}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Search\"})]})});};export default Search;// data.author.username\n// data.description\n// data.title\n// data.location","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js"],"names":["useState","Search","props","setPostsToDisplay","loadedPosts","searchTerm","setSearchTerm","postMatches","post","term","description","toLowerCase","includes","title","location","author","username","handleSearchChange","event","target","value","handleSubmitSearch","filteredPosts","filter","length","preventDefault","console","log"],"mappings":"qJAAA,OAASA,QAAT,KAAyB,OAAzB,C,wFAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAU,CACzB,GAAMC,CAAAA,iBAAiB,CAAGD,KAAK,CAACC,iBAAhC,CACA,GAAMC,CAAAA,WAAW,CAAGF,KAAK,CAACE,WAA1B,CACA,cAAoCJ,QAAQ,CAAC,EAAD,CAA5C,wCAAOK,UAAP,eAAmBC,aAAnB,eACA,QAASC,CAAAA,WAAT,CAAqBC,IAArB,CAA4BC,IAA5B,CAAiC,CAC7B,GAAID,IAAI,CAACE,WAAL,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCH,IAAI,CAACE,WAAL,EAAxC,GAEJH,IAAI,CAACK,KAAL,CAAWF,WAAX,GAAyBC,QAAzB,CAAkCH,IAAI,CAACE,WAAL,EAAlC,CAFI,EAIJH,IAAI,CAACM,QAAL,CAAcH,WAAd,GAA4BC,QAA5B,CAAqCH,IAAI,CAACE,WAAL,EAArC,CAJI,EAMJH,IAAI,CAACO,MAAL,CAAYC,QAAZ,CAAqBL,WAArB,GAAmCC,QAAnC,CAA4CH,IAAI,CAACE,WAAL,EAA5C,CANA,CAOC,CACG,MAAO,KAAP,CACH,CAAC,CACN,GAAMM,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,KAAD,CAAS,CAChCZ,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb,CACH,CAFD,CAIA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACH,KAAD,CAAU,CACrC,GAAMI,CAAAA,aAAa,CAAGlB,WAAW,CAACmB,MAAZ,CAAmB,SAAAf,IAAI,QAAID,CAAAA,WAAW,CAACC,IAAD,CAAOH,UAAP,CAAf,EAAvB,CAAtB,CACAF,iBAAiB,CAACE,UAAU,CAACmB,MAAX,CAAoBF,aAApB,CAAoClB,WAArC,CAAjB,CACAc,KAAK,CAACO,cAAN,GACAC,OAAO,CAACC,GAAR,CAAYtB,UAAZ,EACAC,aAAa,CAAC,EAAD,CAAb,CACC,CAND,CAWI,mBACJ,kCACI,cAAM,QAAQ,CAAEe,kBAAhB,wBACA,cAAO,OAAO,CAAC,aAAf,2BADA,cAEA,cAAO,IAAI,CAAE,QAAb,CAAsB,EAAE,CAAC,aAAzB,CAAuC,QAAQ,CAAEJ,kBAAjD,CAAqE,KAAK,CAAEZ,UAA5E,EAFA,cAGA,eAAQ,IAAI,CAAC,QAAb,oBAHA,GADJ,EADI,CASH,CAvCD,CA2CA,cAAeJ,CAAAA,MAAf,CAEA;AACA;AACA;AACA","sourcesContent":["import { useState } from \"react\"\n\nconst Search = (props) =>{\nconst setPostsToDisplay = props.setPostsToDisplay\nconst loadedPosts = props.loadedPosts\nconst [searchTerm, setSearchTerm] = useState(\"\")\nfunction postMatches(post , term){\n    if (post.description.toLowerCase().includes(term.toLowerCase()) \n    ||\n    post.title.toLowerCase().includes(term.toLowerCase())\n    ||\n    post.location.toLowerCase().includes(term.toLowerCase())\n    ||\n    post.author.username.toLowerCase().includes(term.toLowerCase())\n    ){\n        return true\n    }}\nconst handleSearchChange = (event)=>{\n    setSearchTerm(event.target.value)\n}\n\nconst handleSubmitSearch = (event) =>{\nconst filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\nsetPostsToDisplay(searchTerm.length ? filteredPosts : loadedPosts)\nevent.preventDefault()\nconsole.log(searchTerm)\nsetSearchTerm(\"\")\n}\n\n\n\n\n    return (\n<div>\n    <form onSubmit={handleSubmitSearch}>\n    <label htmlFor=\"site-search\">Search Posts:</label>\n    <input type =\"search\" id=\"site-search\" onChange={handleSearchChange} value={searchTerm}/>\n    <button type=\"submit\">Search</button> \n    </form>\n</div>\n    )\n}\n\n\n\nexport default Search\n\n// data.author.username\n// data.description\n// data.title\n// data.location"]},"metadata":{},"sourceType":"module"}