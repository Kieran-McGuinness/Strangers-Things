{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { loginUser } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = props => {\n  _s();\n\n  const [loginMessage, setLoginMessage] = useState([]);\n  const setCurrentAuthToken = props.setCurrentAuthToken;\n  const currentAuthToken = props.currentAuthToken;\n  const authToken = props.authToken;\n  const setAuthToken = props.setAuthToken;\n  useEffect(() => {\n    localStorage.getItem(\"myToken\") ? setCurrentAuthToken(localStorage.getItem(\"myToken\")) : setAuthToken(null);\n  }, []);\n\n  const handleLogOut = event => {\n    event.preventDefault();\n    localStorage.removeItem(\"myToken\");\n    setCurrentAuthToken(\"\");\n    setAuthToken(null);\n  };\n\n  const handleSubmit = async event => {\n    let loginInfo = {\n      user: {\n        username: `${username}`,\n        password: `${password}`\n      }\n    };\n    event.preventDefault();\n    const results = await loginUser(loginInfo);\n    setLoginMessage(results.data);\n    setPassword(\"\");\n    setUsername(\"\");\n    setAuthToken(true);\n    setCurrentAuthToken(localStorage.getItem(\"myToken\"));\n\n    if (results.success) {\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = `${loginMessage.message}`;\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n    }\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  return authToken ? /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loggedIn\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: loginMessage ? loginMessage.message : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleLogOut,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"login\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\",\n        children: \"Need to register?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginForm, \"VK3pCAdOopjMjH6uBmx/aIvQtIc=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/LoginForm.js"],"names":["Link","useEffect","useState","loginUser","LoginForm","props","loginMessage","setLoginMessage","setCurrentAuthToken","currentAuthToken","authToken","setAuthToken","localStorage","getItem","handleLogOut","event","preventDefault","removeItem","handleSubmit","loginInfo","user","username","password","results","data","setPassword","setUsername","success","document","getElementsByClassName","className","getElementById","innerText","message","setTimeout","handleUsernameChange","target","value","handlePasswordChange"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { loginUser } from \"../api\"\n\n\nconst LoginForm = (props) =>{\n    const [loginMessage, setLoginMessage] = useState([])\n    const setCurrentAuthToken = props.setCurrentAuthToken\n    const currentAuthToken = props.currentAuthToken\nconst authToken = props.authToken\nconst setAuthToken = props.setAuthToken \n    useEffect(() => {\n        localStorage.getItem(\"myToken\")\n        ?\n        setCurrentAuthToken(localStorage.getItem(\"myToken\"))\n        :\n        setAuthToken(null)\n    }, [])\n   \n\nconst handleLogOut = (event) => {\n    event.preventDefault()\nlocalStorage.removeItem(\"myToken\")\nsetCurrentAuthToken(\"\")\nsetAuthToken(null)\n}    \n\n\nconst handleSubmit = async (event) =>{\n    let loginInfo = {\n        user: {\n            username: `${username}`,\n            password: `${password}`\n        }\n        }\nevent.preventDefault()\nconst results = await loginUser(loginInfo)\nsetLoginMessage(results.data)\nsetPassword(\"\")\nsetUsername(\"\")\nsetAuthToken(true)\nsetCurrentAuthToken(localStorage.getItem(\"myToken\"))\nif(results.success){\n    document.getElementsByClassName(\"hidden\")[0].className=\"visible\"\n    document.getElementById(\"float\").innerText = `${loginMessage.message}`\n    setTimeout(function(){\n        document.getElementById(\"float\").className=\"hidden\";\n    },5000)\n}\n}\n\nconst [username, setUsername] = useState(\"\")\nconst [password, setPassword] = useState(\"\")\nconst handleUsernameChange = (event) =>{\nsetUsername(event.target.value)\n}\nconst handlePasswordChange = (event) =>{\nsetPassword(event.target.value)\n}\n\n\n\n    return (\n        authToken ?\n        <div id=\"loggedIn\">\n        <p>{loginMessage? loginMessage.message : \"\"}</p>\n        <button type=\"submit\" onClick={handleLogOut}>Log Out</button>\n        </div>\n        :\n        <div id =\"login\">\n            <form onSubmit={handleSubmit}>\n                <label htmlFor=\"username\">Username:</label>\n                <input type=\"text\"  name=\"username\" value={username}  onChange={handleUsernameChange}/>\n                <label htmlFor=\"password\">Password:</label>\n                <input type=\"text\" name=\"password\" value={password} onChange={handlePasswordChange}/>\n                <button type=\"submit\">Submit</button>\n                <Link to=\"/register\">Need to register?</Link>\n            </form>\n        </div>\n        \n    )\n}\n\n\nexport default LoginForm\n\n\n"]},"metadata":{},"sourceType":"module"}