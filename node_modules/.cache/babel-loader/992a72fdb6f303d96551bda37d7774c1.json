{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { CreateMessage, CreatePost, IndividualPost } from '.';\nimport { callApi } from '../api';\nimport Search from './Search';\nimport Badge from '@mui/material/Badge';\nimport MailIcon from '@mui/icons-material/Mail';\nimport { Divider } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const postsToDisplay = props.postsToDisplay;\n  const setPostsToDisplay = props.setPostsToDisplay;\n  const loadedPosts = props.loadedPosts;\n  const setLoadedPosts = props.setLoadedPosts;\n  useEffect(() => {\n    // calls to api for all posts, if token exists uses it in api call, loads the posts onto the page\n    callApi({\n      url: \"/posts\",\n      token: localStorage.getItem(\"myToken\")\n    }).then(result => {\n      setLoadedPosts(result.data.posts);\n      setPostsToDisplay(result.data.posts); // console.log(result)\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"postspage\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"postsandcreate\",\n      children: [/*#__PURE__*/_jsxDEV(CreatePost, {\n        setLoadedPosts: setLoadedPosts,\n        loadedPosts: loadedPosts,\n        setPostsToDisplay: setPostsToDisplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"posts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"poststitle\",\n          children: \"Posts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          loadedPosts: loadedPosts,\n          setPostsToDisplay: setPostsToDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), postsToDisplay.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"indvPosts\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Posted by: \", item.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Posted on: \", item.createdAt]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Price: \", item.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Description: \", item.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Location: \", item.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Will Deliver: \", JSON.stringify(item.willDeliver)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), (() => {\n            if (item.isAuthor && item.messages.length) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  sx: {\n                    mt: 1.2\n                  },\n                  badgeContent: item.messages.length,\n                  color: \"primary\",\n                  children: /*#__PURE__*/_jsxDEV(MailIcon, {\n                    color: \"action\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n            }\n          })(), item.isAuthor ? /*#__PURE__*/_jsxDEV(IndividualPost, {\n            loadedPosts: loadedPosts,\n            postId: item._id,\n            index: index,\n            setPostsToDisplay: setPostsToDisplay\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 32\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), (() => {\n            if (localStorage.getItem(\"myToken\") && !item.isAuthor) {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(CreateMessage, {\n                  postId: item._id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    borderBottomWidth: 2\n                  },\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true);\n            } else {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    borderBottomWidth: 2\n                  },\n                  component: \"li\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false);\n            }\n          })()]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Posts.js"],"names":["React","useEffect","CreateMessage","CreatePost","IndividualPost","callApi","Search","Badge","MailIcon","Divider","Posts","props","postsToDisplay","setPostsToDisplay","loadedPosts","setLoadedPosts","url","token","localStorage","getItem","then","result","data","posts","catch","error","console","map","item","index","title","author","username","createdAt","price","description","location","JSON","stringify","willDeliver","isAuthor","messages","length","mt","_id","borderBottomWidth"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { CreateMessage, CreatePost, IndividualPost } from '.';\nimport { callApi } from '../api';\nimport Search from './Search';\nimport Badge from '@mui/material/Badge';\nimport MailIcon from '@mui/icons-material/Mail'\nimport { Divider } from '@mui/material';\n\nconst Posts = (props) => {\n  const postsToDisplay = props.postsToDisplay\n  const setPostsToDisplay = props.setPostsToDisplay\n  const loadedPosts = props.loadedPosts\n  const setLoadedPosts = props.setLoadedPosts\n\n\n  useEffect(() => {\n    // calls to api for all posts, if token exists uses it in api call, loads the posts onto the page\n    callApi({ url: \"/posts\", token: localStorage.getItem(\"myToken\") }).then(result => {\n      setLoadedPosts(result.data.posts)\n      setPostsToDisplay(result.data.posts)\n      // console.log(result)\n    }).catch(error => {\n      console.error(error)\n    })\n  }, []);\n\n\n\n  return (\n    <div id=\"postspage\">\n      <div id=\"postsandcreate\">\n        <CreatePost setLoadedPosts={setLoadedPosts} loadedPosts={loadedPosts} setPostsToDisplay={setPostsToDisplay} />\n\n        <div id=\"posts\">\n          <h1 id=\"poststitle\">Posts</h1>\n          <Search loadedPosts={loadedPosts} setPostsToDisplay={setPostsToDisplay} />\n          {postsToDisplay.map((item, index) =>\n            <div key={item._id} className='indvPosts'>\n              <h2>{item.title}</h2>\n              <h3>Posted by: {item.author.username}</h3>\n              <p>Posted on: {item.createdAt}</p>\n              <p>Price: {item.price}</p>\n              <p>Description: {item.description}</p>\n              <p>Location: {item.location}</p>\n              <p>Will Deliver: {JSON.stringify(item.willDeliver)}</p>\n\n              {(() => {\n                if (item.isAuthor && (item.messages.length)) {\n                  return (\n                    <>\n                      <Badge sx={{ mt: 1.2 }} badgeContent={item.messages.length} color=\"primary\">\n                        <MailIcon color=\"action\" />\n                      </Badge>\n\n                    </>\n                  )\n\n                } else {\n                  return (\n                    <>\n\n                    </>\n                  )\n                }\n              })()}\n              {item.isAuthor ? <IndividualPost loadedPosts={loadedPosts} postId={item._id} index={index} setPostsToDisplay={setPostsToDisplay} /> : <></>}\n              {(() => {\n                if (localStorage.getItem(\"myToken\") && !(item.isAuthor)) {\n                  return (\n                    <>\n                      <CreateMessage postId={item._id} />\n                      <Divider sx={{ borderBottomWidth: 2 }} component=\"li\" />\n                    </>\n                  )\n                } else {\n                  return (\n                    <><Divider sx={{ borderBottomWidth: 2 }} component=\"li\" /></>\n                  )\n                }\n              })()}\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n\n\n  )\n\n}\n\nexport default Posts"]},"metadata":{},"sourceType":"module"}