{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/EditPost.js\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { callApi } from \"../api\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditPost = props => {\n  _s();\n\n  const history = useHistory();\n  const [editClicked, setEditClicked] = useState(false);\n  const id = props.id;\n  const indPost = props.indPost;\n  const [description, setDescription] = useState(\"\");\n  const [location, setLocation] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [willDeliver, setWillDeliver] = useState(false);\n\n  const clickButton = event => {\n    // sets form values to those of post that is being edited\n    setDescription(indPost[0].description);\n    setLocation(indPost[0].location);\n    setPrice(indPost[0].price);\n    setTitle(indPost[0].title);\n    setWillDeliver(indPost[0].willDeliver);\n    setEditClicked(true);\n  };\n\n  const handleSubmitEdit = async event => {\n    event.preventDefault();\n    let editedInfo = {\n      post: {\n        title: `${title}`,\n        description: `${description}`,\n        price: `${price}`,\n        location: `${location}`,\n        willDeliver: `${willDeliver}`\n      }\n    };\n    const results = await callApi({\n      url: `/posts/${id}`,\n      method: \"patch\",\n      token: localStorage.getItem(\"myToken\"),\n      body: editedInfo\n    });\n\n    if (results.success) {\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = \"Post has been updated\";\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n    } // console.log(editedInfo, id)\n    // console.log(results)\n\n\n    history.push(\"/posts\");\n  };\n\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n\n  const handleLocationChange = event => {\n    setLocation(event.target.value);\n  };\n\n  const handlePriceChange = event => {\n    setPrice(event.target.value);\n  };\n\n  const handleTitleChange = event => {\n    setTitle(event.target.value);\n  };\n\n  const handleWillDeliverChange = event => {\n    setWillDeliver(event.target.checked);\n  };\n\n  return editClicked ? /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    noValidate: true,\n    autoComplete: \"off\",\n    id: \"editpost\",\n    onSubmit: handleSubmitEdit,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      id: \"editdescription\",\n      label: \"Description\",\n      value: description,\n      variant: \"standard\",\n      onChange: handleDescriptionChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      id: \"editlocation\",\n      label: \"Location:\",\n      value: location,\n      variant: \"standard\",\n      onChange: handleLocationChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      id: \"editprice\",\n      label: \"Price:\",\n      value: price,\n      variant: \"standard\",\n      onChange: handlePriceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      required: true,\n      id: \"edittitle\",\n      label: \"Title\",\n      value: title,\n      variant: \"standard\",\n      onChange: handleTitleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        value: willDeliver,\n        onChange: handleWillDeliverChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 44\n      }, this),\n      label: \"Will Deliver\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      id: \"submiteditpostbtn\",\n      sx: {\n        mb: .5\n      },\n      variant: \"contained\",\n      color: \"success\",\n      size: \"small\",\n      type: \"submit\",\n      children: \"Submit Edited Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editpost\",\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      size: \"small\",\n      color: \"success\",\n      startIcon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 85\n      }, this),\n      onClick: clickButton,\n      children: \"Edit Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 13\n  }, this);\n};\n\n_s(EditPost, \"ScRHXhRNt8+IOvAlEk8mt/x02xQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditPost;\n{\n  /* <form onSubmit={handleSubmitEdit}>\n             <label htmlFor=\"description\">Description:</label>\n             <input type=\"text\" name=\"description\" value = {description} onChange={handleDescriptionChange}/>\n              <label htmlFor=\"location\">Location:</label>\n              <input type=\"text\" name=\"location\" value = {location} onChange={handleLocationChange}/>\n              <label htmlFor=\"price\">Price:</label>\n              <input type=\"text\" name=\"price\" value = {price} onChange={handlePriceChange}/>\n              <label htmlFor=\"title\">Title:</label>\n              <input type=\"text\" name=\"title\" value = {title} onChange={handleTitleChange}/>\n              <label htmlFor=\"willdeliver\">Will Deliver</label>\n              <input type=\"checkbox\" name=\"willdeliver\" value = {willDeliver} onChange={handleWillDeliverChange}/>\n              <button type=\"submit\">Submit Post</button>\n         </form> */\n}\nexport default EditPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPost\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/EditPost.js"],"names":["useHistory","useState","callApi","DeleteIcon","Box","TextField","Button","FormControlLabel","Checkbox","EditPost","props","history","editClicked","setEditClicked","id","indPost","description","setDescription","location","setLocation","price","setPrice","title","setTitle","willDeliver","setWillDeliver","clickButton","event","handleSubmitEdit","preventDefault","editedInfo","post","results","url","method","token","localStorage","getItem","body","success","document","getElementsByClassName","className","getElementById","innerText","setTimeout","push","handleDescriptionChange","target","value","handleLocationChange","handlePriceChange","handleTitleChange","handleWillDeliverChange","checked","mb"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router-dom\"\nimport { useState } from \"react\"\nimport { callApi } from \"../api\"\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n\n\nconst EditPost = (props) => {\n    const history = useHistory()\n    const [editClicked, setEditClicked] = useState(false)\n    const id = props.id\n    const indPost = props.indPost\n    const [description, setDescription] = useState(\"\")\n    const [location, setLocation] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [title, setTitle] = useState(\"\")\n    const [willDeliver, setWillDeliver] = useState(false)\n    const clickButton = (event) => {\n        // sets form values to those of post that is being edited\n        setDescription(indPost[0].description)\n        setLocation(indPost[0].location)\n        setPrice(indPost[0].price)\n        setTitle(indPost[0].title)\n        setWillDeliver(indPost[0].willDeliver)\n        setEditClicked(true)\n    }\n\n    const handleSubmitEdit = async (event) => {\n        event.preventDefault()\n        let editedInfo = {\n            post: {\n                title: `${title}`,\n                description: `${description}`,\n                price: `${price}`,\n                location: `${location}`,\n                willDeliver: `${willDeliver}`\n            }\n        }\n        const results = await callApi({ url: `/posts/${id}`, method: \"patch\", token: localStorage.getItem(\"myToken\"), body: editedInfo })\n        if (results.success) {\n            document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n            document.getElementById(\"float\").innerText = \"Post has been updated\"\n            setTimeout(function () {\n                document.getElementById(\"float\").className = \"hidden\";\n            }, 5000)\n        }\n        // console.log(editedInfo, id)\n        // console.log(results)\n        history.push(\"/posts\")\n    }\n    const handleDescriptionChange = (event) => {\n        setDescription(event.target.value)\n    }\n    const handleLocationChange = (event) => {\n        setLocation(event.target.value)\n    }\n    const handlePriceChange = (event) => {\n        setPrice(event.target.value)\n    }\n    const handleTitleChange = (event) => {\n        setTitle(event.target.value)\n    }\n    const handleWillDeliverChange = (event) => {\n        setWillDeliver(event.target.checked)\n    }\n\n    return (\n        editClicked ?\n            <Box component=\"form\" noValidate autoComplete=\"off\" id=\"editpost\" onSubmit={handleSubmitEdit}>\n                <TextField\n                    required\n                    id=\"editdescription\"\n                    label=\"Description\"\n                    value={description}\n                    variant=\"standard\"\n                    onChange={handleDescriptionChange}\n                />\n                <TextField\n                    required\n                    id=\"editlocation\"\n                    label=\"Location:\"\n                    value={location}\n                    variant=\"standard\"\n                    onChange={handleLocationChange}\n                />\n                <TextField\n                    required\n                    id=\"editprice\"\n                    label=\"Price:\"\n                    value={price}\n                    variant=\"standard\"\n                    onChange={handlePriceChange}\n                />\n                <TextField\n                    required\n                    id=\"edittitle\"\n                    label=\"Title\"\n                    value={title}\n                    variant=\"standard\"\n                    onChange={handleTitleChange}\n                />\n                <FormControlLabel control={<Checkbox value={willDeliver} onChange={handleWillDeliverChange} />} label=\"Will Deliver\" />\n                <Button id=\"submiteditpostbtn\" sx={{ mb: .5 }} variant=\"contained\" color=\"success\" size=\"small\" type=\"submit\">Submit Edited Post</Button>\n            </Box>\n            :\n            <div id=\"editpost\">\n                <Button variant=\"contained\" size=\"small\" color=\"success\" startIcon={<DeleteIcon />} onClick={clickButton}>Edit Post</Button>\n            </div>\n\n    )\n}\n\n\n{/* <form onSubmit={handleSubmitEdit}>\n            <label htmlFor=\"description\">Description:</label>\n            <input type=\"text\" name=\"description\" value = {description} onChange={handleDescriptionChange}/>\n             <label htmlFor=\"location\">Location:</label>\n             <input type=\"text\" name=\"location\" value = {location} onChange={handleLocationChange}/>\n             <label htmlFor=\"price\">Price:</label>\n             <input type=\"text\" name=\"price\" value = {price} onChange={handlePriceChange}/>\n             <label htmlFor=\"title\">Title:</label>\n             <input type=\"text\" name=\"title\" value = {title} onChange={handleTitleChange}/>\n             <label htmlFor=\"willdeliver\">Will Deliver</label>\n             <input type=\"checkbox\" name=\"willdeliver\" value = {willDeliver} onChange={handleWillDeliverChange}/>\n             <button type=\"submit\">Submit Post</button>\n        </form> */}\n\n\n\n\n\nexport default EditPost"]},"metadata":{},"sourceType":"module"}