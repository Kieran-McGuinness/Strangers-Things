{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport DeletePost from './DeletePost';\nimport { EditPost } from \".\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewPost = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const setPostsToDisplay = props.setPostsToDisplay;\n  const loadedPosts = props.loadedPosts;\n  const setLoadedPosts = props.setLoadedPosts;\n\n  function postView(post, term) {\n    return post._id.includes(term);\n  }\n\n  const indPost = loadedPosts.filter(post => postView(post, id));\n  console.log(loadedPosts);\n  return indPost.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"indvPosts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: indPost[0].title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: indPost[0].author.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Posted on: \", indPost[0].createdAt]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", indPost[0].price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Description: \", indPost[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", indPost[0].location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Will Deliver: \", JSON.stringify(indPost[0].willDeliver)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Messages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), (() => {\n      if (indPost[0].isAuthor && indPost[0].messages) {\n        return indPost[0].messages.map((messages, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"From: \", messages.fromUser.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messages.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this)]\n        }, \"message\" + messages.post._id + index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 67\n        }, this));\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No Messages\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 19\n          }, this)\n        }, void 0, false);\n      }\n    })(), indPost[0].isAuthor ? /*#__PURE__*/_jsxDEV(EditPost, {\n      id: id,\n      indPost: indPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 76\n    }, this), indPost[0].isAuthor ? /*#__PURE__*/_jsxDEV(DeletePost, {\n      postId: indPost[0]._id,\n      setLoadedPosts: setLoadedPosts,\n      loadedPosts: loadedPosts,\n      setPostsToDisplay: setPostsToDisplay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Return to All Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 32\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, indPost[0]._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 26\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Post Does Not Exist\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/posts\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Return to all Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 28\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ViewPost, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/ViewPost.js"],"names":["useState","Link","useParams","DeletePost","EditPost","ViewPost","props","id","setPostsToDisplay","loadedPosts","setLoadedPosts","postView","post","term","_id","includes","indPost","filter","console","log","length","title","author","username","createdAt","price","description","location","JSON","stringify","willDeliver","isAuthor","messages","map","index","fromUser","content"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { useParams } from \"react-router-dom\"\nimport DeletePost from './DeletePost';\nimport { EditPost } from \".\";\n\nconst ViewPost= (props) =>{\n    const { id } = useParams()\n    const setPostsToDisplay = props.setPostsToDisplay\n    const loadedPosts = props.loadedPosts\n    const setLoadedPosts = props.setLoadedPosts\n    function postView(post, term){\n        return post._id.includes(term)\n    }\n    const indPost = loadedPosts.filter(post => postView(post, id))\n    console.log(loadedPosts)\n    return(\n        indPost.length ? <div key={indPost[0]._id} className='indvPosts'>\n        <h2>{indPost[0].title}</h2>\n        <h3>{indPost[0].author.username}</h3>\n        <p>Posted on: {indPost[0].createdAt}</p>\n        <p>Price: {indPost[0].price}</p>\n        <p>Description: {indPost[0].description}</p>\n        <p>Location: {indPost[0].location}</p>\n        <p>Will Deliver: {JSON.stringify(indPost[0].willDeliver)}</p>\n        <h3>Messages:</h3>\n        {(() => {\n              if (indPost[0].isAuthor && (indPost[0].messages)){\n                return (\n                    indPost[0].messages.map( (messages, index) => <div key={\"message\" + messages.post._id + index}>\n                      <p>From: {messages.fromUser.username}</p>\n                    <p>{messages.content}</p>\n                  </div>)\n                )\n              } else {\n                return (\n                  <>\n                  <p>No Messages</p>\n                  </>\n                )\n              }\n            })()}\n\n             {indPost[0].isAuthor ? <EditPost id={id} indPost={indPost}/>: <p></p>}\n             {indPost[0].isAuthor ? <DeletePost postId={indPost[0]._id} setLoadedPosts={setLoadedPosts} \n          loadedPosts={loadedPosts} setPostsToDisplay={setPostsToDisplay}/>: <></>} \n            <Link to=\"/posts\"> <button >Return to All Posts</button> </Link>\n        </div>:\n        <div>\n        <h2>Post Does Not Exist</h2>\n        <Link to=\"/posts\"> <button >Return to all Posts</button> </Link>\n        </div>\n    )\n}\n\nexport default ViewPost"]},"metadata":{},"sourceType":"module"}