{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Search = props => {\n  _s();\n\n  const setPostsToDisplay = props.setPostsToDisplay;\n  const loadedPosts = props.loadedPosts;\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  function postMatches(post, term) {\n    // checks if description, title, location or authors names from all posts contain the search term\n    if (post.description.toLowerCase().includes(term.toLowerCase()) || post.title.toLowerCase().includes(term.toLowerCase()) || post.location.toLowerCase().includes(term.toLowerCase()) || post.author.username.toLowerCase().includes(term.toLowerCase())) {\n      return true;\n    }\n  }\n\n  const handleSearchChange = event => {\n    setSearchTerm(event.target.value);\n  };\n\n  const handleSubmitSearch = event => {\n    // filters only for posts that contain the searched word and displays them instead of all posts\n    event.preventDefault();\n    const filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\n    setPostsToDisplay(searchTerm.length ? filteredPosts : loadedPosts); // console.log(searchTerm)\n\n    setSearchTerm(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    component: \"form\",\n    id: \"searchform\",\n    sx: {\n      '& .MuiTextField-root': {\n        m: 0,\n        width: '25ch'\n      }\n    },\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: handleSubmitSearch,\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"site-search\",\n      label: \"Search Posts...\",\n      type: \"search\",\n      variant: \"standard\",\n      onChange: handleSearchChange,\n      value: searchTerm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      sx: {\n        mb: 2\n      },\n      variant: \"contained\",\n      color: \"primary\",\n      size: \"small\",\n      type: \"submit\",\n      children: \"Search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Search, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Search.js"],"names":["useState","Box","TextField","Button","Search","props","setPostsToDisplay","loadedPosts","searchTerm","setSearchTerm","postMatches","post","term","description","toLowerCase","includes","title","location","author","username","handleSearchChange","event","target","value","handleSubmitSearch","preventDefault","filteredPosts","filter","length","m","width","mb"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,iBAAiB,GAAGD,KAAK,CAACC,iBAAhC;AACA,QAAMC,WAAW,GAAGF,KAAK,CAACE,WAA1B;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;;AACA,WAASU,WAAT,CAAqBC,IAArB,EAA2BC,IAA3B,EAAiC;AAC7B;AACA,QAAID,IAAI,CAACE,WAAL,CAAiBC,WAAjB,GAA+BC,QAA/B,CAAwCH,IAAI,CAACE,WAAL,EAAxC,KAEAH,IAAI,CAACK,KAAL,CAAWF,WAAX,GAAyBC,QAAzB,CAAkCH,IAAI,CAACE,WAAL,EAAlC,CAFA,IAIAH,IAAI,CAACM,QAAL,CAAcH,WAAd,GAA4BC,QAA5B,CAAqCH,IAAI,CAACE,WAAL,EAArC,CAJA,IAMAH,IAAI,CAACO,MAAL,CAAYC,QAAZ,CAAqBL,WAArB,GAAmCC,QAAnC,CAA4CH,IAAI,CAACE,WAAL,EAA5C,CANJ,EAOE;AACE,aAAO,IAAP;AACH;AACJ;;AACD,QAAMM,kBAAkB,GAAIC,KAAD,IAAW;AAClCZ,IAAAA,aAAa,CAACY,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,QAAMC,kBAAkB,GAAIH,KAAD,IAAW;AAClC;AACAA,IAAAA,KAAK,CAACI,cAAN;AACA,UAAMC,aAAa,GAAGnB,WAAW,CAACoB,MAAZ,CAAmBhB,IAAI,IAAID,WAAW,CAACC,IAAD,EAAOH,UAAP,CAAtC,CAAtB;AACAF,IAAAA,iBAAiB,CAACE,UAAU,CAACoB,MAAX,GAAoBF,aAApB,GAAoCnB,WAArC,CAAjB,CAJkC,CAKlC;;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH,GAPD;;AAYA,sBACI,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,IAAA,EAAE,EAAC,YAAzB;AACI,IAAA,EAAE,EAAE;AACA,8BAAwB;AAAEoB,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,KAAK,EAAE;AAAf;AADxB,KADR;AAII,IAAA,UAAU,MAJd;AAKI,IAAA,YAAY,EAAC,KALjB;AAKuB,IAAA,QAAQ,EAAEN,kBALjC;AAAA,4BAMI,QAAC,SAAD;AACI,MAAA,EAAE,EAAC,aADP;AAEI,MAAA,KAAK,EAAC,iBAFV;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,OAAO,EAAC,UAJZ;AAKI,MAAA,QAAQ,EAAEJ,kBALd;AAMI,MAAA,KAAK,EAAEZ;AANX;AAAA;AAAA;AAAA;AAAA,YANJ,eAcI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAE;AAAEuB,QAAAA,EAAE,EAAE;AAAN,OAAZ;AAAuB,MAAA,OAAO,EAAC,WAA/B;AAA2C,MAAA,KAAK,EAAC,SAAjD;AAA2D,MAAA,IAAI,EAAC,OAAhE;AAAwE,MAAA,IAAI,EAAC,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkBH,CAnDD;;GAAM3B,M;;KAAAA,M;AAqDN,eAAeA,MAAf","sourcesContent":["import { useState } from \"react\"\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\n\nconst Search = (props) => {\n    const setPostsToDisplay = props.setPostsToDisplay\n    const loadedPosts = props.loadedPosts\n    const [searchTerm, setSearchTerm] = useState(\"\")\n    function postMatches(post, term) {\n        // checks if description, title, location or authors names from all posts contain the search term\n        if (post.description.toLowerCase().includes(term.toLowerCase())\n            ||\n            post.title.toLowerCase().includes(term.toLowerCase())\n            ||\n            post.location.toLowerCase().includes(term.toLowerCase())\n            ||\n            post.author.username.toLowerCase().includes(term.toLowerCase())\n        ) {\n            return true\n        }\n    }\n    const handleSearchChange = (event) => {\n        setSearchTerm(event.target.value)\n    }\n\n    const handleSubmitSearch = (event) => {\n        // filters only for posts that contain the searched word and displays them instead of all posts\n        event.preventDefault()\n        const filteredPosts = loadedPosts.filter(post => postMatches(post, searchTerm));\n        setPostsToDisplay(searchTerm.length ? filteredPosts : loadedPosts)\n        // console.log(searchTerm)\n        setSearchTerm(\"\")\n    }\n\n\n\n\n    return (\n        <Box component=\"form\" id=\"searchform\"\n            sx={{\n                '& .MuiTextField-root': { m: 0, width: '25ch' },\n            }}\n            noValidate\n            autoComplete=\"off\" onSubmit={handleSubmitSearch}>\n            <TextField\n                id=\"site-search\"\n                label=\"Search Posts...\"\n                type=\"search\"\n                variant=\"standard\"\n                onChange={handleSearchChange}\n                value={searchTerm}\n            />\n            <Button sx={{ mb: 2 }} variant=\"contained\" color=\"primary\" size=\"small\" type=\"submit\">Search</Button>\n        </Box>\n    )\n}\n\nexport default Search\n"]},"metadata":{},"sourceType":"module"}