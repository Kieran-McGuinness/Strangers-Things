{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { callApi, getMe } from \"../api\";\nimport Divider from '@mui/material/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = props => {\n  _s();\n\n  const [myProfile, setMyProfile] = useState([]);\n  useEffect(() => {\n    callApi({\n      url: \"/users/me\",\n      token: localStorage.getItem(\"myToken\")\n    }).then(result => {\n      setMyProfile(result.data);\n      console.log(result.data);\n    }).catch(error => {\n      console.error(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      id: \"profiletitle\",\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"My Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), myProfile.posts ? myProfile.posts.map(post => post.active ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profileposts\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category\",\n            children: \"Post Title:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), post.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"category\",\n            children: \"Post Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this), post.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }, this), post.messages.map((messages, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profilemessages\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: \"Message \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 18\n            }, this), index + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category\",\n              children: \"From:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 18\n            }, this), messages.fromUser.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: messages.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"middle\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, index + 1, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 14\n        }, this))]\n      }, \"post\" + post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, post._id + .5, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"wOdsOx93x1iiAqRKARFetyXy6Sc=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Profile.js"],"names":["React","useEffect","useState","callApi","getMe","Divider","Profile","props","myProfile","setMyProfile","url","token","localStorage","getItem","then","result","data","console","log","catch","error","posts","map","post","active","title","description","messages","index","fromUser","username","content","_id"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { callApi, getMe } from \"../api\";\nimport Divider from '@mui/material/Divider';\n\nconst Profile = (props) => {\nconst [myProfile, setMyProfile] = useState([])\n\n    useEffect(() => {\n        callApi({ url: \"/users/me\", token:localStorage.getItem(\"myToken\")}).then(result=>{\n          setMyProfile(result.data)\n          console.log(result.data)\n        }).catch(error=>{\n          console.error(error)\n        })}, []); \n    return (\n        <div id=\"profile\">\n        <h1 id=\"profiletitle\">Profile</h1>\n        <div>\n        <h3>My Posts</h3>\n        {myProfile.posts ? myProfile.posts.map(post =>\n        post.active ?\n        <div className=\"profileposts\" key ={\"post\" + post._id}>\n             <p><span className=\"category\">Post Title:</span>{post.title}</p>\n             <p><span className=\"category\">Post Description:</span>{post.description}</p>\n             <Divider variant=\"inset\" component=\"li\" />\n             {post.messages.map((messages,index) =>\n             <div className=\"profilemessages\" key={index + 1}>\n              <p><span className=\"category\">Message </span>{index + 1}</p>\n              <p><span className=\"category\">From:</span>{messages.fromUser.username}</p>\n              <p>{messages.content}</p>\n              <Divider variant=\"middle\" component=\"li\" /> \n              </div>)}\n            </div>:\n          <React.Fragment key={post._id + .5}></React.Fragment>):\n        <p>no posts</p>}\n        {/* {myProfile.messages ? myProfile.messages.map(messages => \n        <div key ={\"message\" + messages.post._id}>\n             <p>From:{messages.fromUser.username}</p>\n             <p>Post Title:{messages.post.title}</p>\n             <p>Message:{messages.content}</p>\n            <p>--------</p>\n            </div>):\n        <p>no messages</p>} */}\n        </div>\n        </div>\n    )\n}\n\n\nexport default Profile"]},"metadata":{},"sourceType":"module"}