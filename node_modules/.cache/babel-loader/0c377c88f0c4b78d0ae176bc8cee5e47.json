{"ast":null,"code":"import { useState } from \"react\";\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`; // export async function getPosts() {\n//     try {\n//       const response =  localStorage.getItem(\"myToken\")\n//       ? \n//       await fetch(`${API}/posts`, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//         }\n//       })\n//       :\n//       await fetch(`${API}/posts`)\n//       ;\n//       const result = await response.json();\n//       // console.log(result)\n//       return result;\n//     } catch (error) {\n//       throw error;\n//     }\n//   }\n// export async function registerNew (regInfo) {\n//   try{\n//     const response = await fetch(`${API}/users/register`,\n//     {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(\n//         regInfo\n//         ),\n//     }\n//     );\n//     const result = await response.json();\n//     console.log(result);\n//   } catch (error){\n//     console.error('could not register', error)\n//   }\n// };\n//   export function loginUser (loginInfo){\n//   return fetch(`${API}/users/login`,{\n//      method: 'POST',\n//      headers: {\n//        'Content-Type': 'application/json'\n//      },\n//      body: JSON.stringify\n//      (\n//        loginInfo\n//        ),\n//    }\n//    ).then(response => response.json())\n//    .then(result =>{\n//      result.data.token ? localStorage.setItem(\"myToken\", result.data.token): console.log(result);\n//      console.log(result)\n//      return result;\n//    }).catch(console.error);\n//  }\n\nexport function createPost(postInfo) {\n  return fetch(`${API}/posts`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n    },\n    body: JSON.stringify(postInfo)\n  }).then(response => response.json()).then(result => {\n    console.log(result);\n    return result;\n  }).catch(console.error);\n}\nexport async function deletePost(postId) {\n  try {\n    const response = await fetch(`${API}/posts/${postId}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function getMe() {\n  try {\n    const response = localStorage.getItem(\"myToken\") ? await fetch(`${API}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    }) : await fetch(`${API}/users/me`);\n    const result = await response.json(); // console.log(result)\n\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function sendMessage(messageInfo, postId) {\n  try {\n    const response = await fetch(`${API}/posts/${postId}/messages`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify(messageInfo)\n    });\n    const result = await response.json();\n    return results;\n    console.log(result);\n  } catch (error) {\n    console.error('could not send message', error);\n  }\n}\n;\nexport async function getIndvPosts(id) {\n  try {\n    const response = localStorage.getItem(\"myToken\") ? await fetch(`${API}/posts/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    }) : await fetch(`${API}/posts`);\n    const result = await response.json(); // console.log(result)\n\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nexport async function editPosts(info, id) {\n  try {\n    const response = await fetch(`${API}/posts/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify(info)\n    });\n    const result = await response.json();\n    console.log(result);\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\nconst {\n  REACT_APP_BASE_URL\n} = process.env;\nexport const callApi = async _ref => {\n  let {\n    url,\n    method,\n    token,\n    body\n  } = _ref;\n  console.log({\n    url,\n    method,\n    token,\n    body\n  });\n\n  try {\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    } // console.log('request url: ', REACT_APP_BASE_URL + url)\n    // console.log('options: ', options);\n\n\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json(); // console.log('data: ', data);\n\n    if (data.error) throw data.error;\n    console.log(data);\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n    alert(error.message);\n    return error;\n  }\n}; // REACT_APP_BASE_URL = https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT\n// node app.js\n// process.env.REACT_APP_BASE_URL","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/api/index.js"],"names":["useState","cohortName","API","createPost","postInfo","fetch","method","headers","localStorage","getItem","body","JSON","stringify","then","response","json","result","console","log","catch","error","deletePost","postId","getMe","sendMessage","messageInfo","results","getIndvPosts","id","editPosts","info","REACT_APP_BASE_URL","process","env","callApi","url","token","options","toUpperCase","data","alert","message"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAO,MAAMC,UAAU,GAAG,iBAAnB;AACP,OAAO,MAAMC,GAAG,GAAI,8CAA6CD,UAAW,EAArE,C,CAGP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGC,OAAO,SAASE,UAAT,CAAqBC,QAArB,EAA8B;AACpC,SAAOC,KAAK,CAAE,GAAEH,GAAI,QAAR,EAAgB;AACzBI,IAAAA,MAAM,EAAE,MADiB;AAEzBC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEP,uBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFpD,KAFgB;AAMzBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAEJR,QAFI;AANmB,GAAhB,CAAL,CAWJS,IAXI,CAWCC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAXb,EAYLF,IAZK,CAYAG,MAAM,IAAG;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOA,MAAP;AACD,GAfK,EAeHG,KAfG,CAeGF,OAAO,CAACG,KAfX,CAAP;AAgBA;AAGD,OAAO,eAAeC,UAAf,CAA0BC,MAA1B,EAAkC;AACxC,MAAI;AACF,UAAMR,QAAQ,GAAI,MAAMT,KAAK,CAAE,GAAEH,GAAI,UAASoB,MAAO,EAAxB,EAA2B;AACtDhB,MAAAA,MAAM,EAAG,QAD6C;AAEtDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEV,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFjD;AAF6C,KAA3B,CAA7B;AAQA,UAAMO,MAAM,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOA,MAAP;AACD,GAZD,CAYE,OAAOI,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;AAED,OAAO,eAAeG,KAAf,GAAuB;AAC5B,MAAI;AACF,UAAMT,QAAQ,GAAIN,YAAY,CAACC,OAAb,CAAqB,SAArB,IAElB,MAAMJ,KAAK,CAAE,GAAEH,GAAI,WAAR,EAAoB;AAC7BK,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEV,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFjD;AADoB,KAApB,CAFO,GASlB,MAAMJ,KAAK,CAAE,GAAEH,GAAI,WAAR,CATX;AAWA,UAAMc,MAAM,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAArB,CAZE,CAaF;;AACA,WAAOC,MAAP;AACD,GAfD,CAeE,OAAOI,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;AAGD,OAAO,eAAeI,WAAf,CAA4BC,WAA5B,EAAyCH,MAAzC,EAAiD;AACtD,MAAG;AACD,UAAMR,QAAQ,GAAG,MAAMT,KAAK,CAAE,GAAEH,GAAI,UAASoB,MAAO,WAAxB,EAC5B;AACEhB,MAAAA,MAAM,EAAE,MADV;AAEEC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFpD,OAFX;AAMEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJa,WADI;AANR,KAD4B,CAA5B;AAYA,UAAMT,MAAM,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAArB;AACA,WAAOW,OAAP;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,GAhBD,CAgBE,OAAOI,KAAP,EAAa;AACbH,IAAAA,OAAO,CAACG,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;AACD;AACF;AAAA;AAED,OAAO,eAAeO,YAAf,CAA4BC,EAA5B,EAAgC;AACrC,MAAI;AACF,UAAMd,QAAQ,GAAIN,YAAY,CAACC,OAAb,CAAqB,SAArB,IAElB,MAAMJ,KAAK,CAAE,GAAEH,GAAI,UAAS0B,EAAG,EAApB,EAAuB;AAChCrB,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEV,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFjD;AADuB,KAAvB,CAFO,GASlB,MAAMJ,KAAK,CAAE,GAAEH,GAAI,QAAR,CATX;AAWA,UAAMc,MAAM,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAArB,CAZE,CAaF;;AACA,WAAOC,MAAP;AACD,GAfD,CAeE,OAAOI,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;AAED,OAAO,eAAeS,SAAf,CAAyBC,IAAzB,EAA+BF,EAA/B,EAAmC;AACxC,MAAI;AACF,UAAMd,QAAQ,GAAI,MAAMT,KAAK,CAAE,GAAEH,GAAI,UAAS0B,EAAG,EAApB,EAAuB;AAClDtB,MAAAA,MAAM,EAAE,OAD0C;AAElDC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEV,yBAAkB,UAASC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAgC;AAFjD,OAFyC;AAMlDC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CACJkB,IADI;AAN4C,KAAvB,CAA7B;AAUA,UAAMd,MAAM,GAAG,MAAMF,QAAQ,CAACC,IAAT,EAArB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,WAAOA,MAAP;AACD,GAdD,CAcE,OAAOI,KAAP,EAAc;AACd,UAAMA,KAAN;AACD;AACF;AAED,MAAM;AAAEW,EAAAA;AAAF,IAAyBC,OAAO,CAACC,GAAvC;AAEA,OAAO,MAAMC,OAAO,GAAG,cAAwC;AAAA,MAAjC;AAAEC,IAAAA,GAAF;AAAO7B,IAAAA,MAAP;AAAe8B,IAAAA,KAAf;AAAsB1B,IAAAA;AAAtB,GAAiC;AAC7DO,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEiB,IAAAA,GAAF;AAAO7B,IAAAA,MAAP;AAAe8B,IAAAA,KAAf;AAAsB1B,IAAAA;AAAtB,GAAZ;;AACA,MAAI;AAEF,UAAM2B,OAAO,GAAG;AACd/B,MAAAA,MAAM,EAAEA,MAAM,GAAGA,MAAM,CAACgC,WAAP,EAAH,GAA0B,KAD1B;AAEd/B,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFK;AAKdG,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeF,IAAf;AALQ,KAAhB;;AAQA,QAAI0B,KAAJ,EAAW;AACTC,MAAAA,OAAO,CAAC9B,OAAR,CAAgB,eAAhB,IAAoC,UAAS6B,KAAM,EAAnD;AACD,KAZC,CAaF;AACA;;;AACA,UAAMtB,QAAQ,GAAG,MAAMT,KAAK,CAAC0B,kBAAkB,GAAGI,GAAtB,EAA2BE,OAA3B,CAA5B;AACA,UAAME,IAAI,GAAG,MAAMzB,QAAQ,CAACC,IAAT,EAAnB,CAhBE,CAiBF;;AACA,QAAIwB,IAAI,CAACnB,KAAT,EAAgB,MAAMmB,IAAI,CAACnB,KAAX;AAChBH,IAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AACA,WAAOA,IAAP;AACD,GArBD,CAqBE,OAAOnB,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACG,KAAR,CAAc,SAAd,EAAyBA,KAAzB;AACAoB,IAAAA,KAAK,CAACpB,KAAK,CAACqB,OAAP,CAAL;AACA,WAAOrB,KAAP;AACD;AACF,CA5BM,C,CA+BP;AACA;AAEA","sourcesContent":["import { useState } from \"react\";\nexport const cohortName = '2110-VPI-WEB-PT';\nexport const API = `https://strangers-things.herokuapp.com/api/${cohortName}`;\n\n\n// export async function getPosts() {\n//     try {\n//       const response =  localStorage.getItem(\"myToken\")\n//       ? \n//       await fetch(`${API}/posts`, {\n//         headers: {\n//           'Content-Type': 'application/json',\n//        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n//         }\n//       })\n//       :\n//       await fetch(`${API}/posts`)\n//       ;\n//       const result = await response.json();\n//       // console.log(result)\n//       return result;\n//     } catch (error) {\n//       throw error;\n//     }\n//   }\n\n\n  // export async function registerNew (regInfo) {\n  //   try{\n  //     const response = await fetch(`${API}/users/register`,\n  //     {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json',\n  //       },\n  //       body: JSON.stringify(\n  //         regInfo\n  //         ),\n  //     }\n  //     );\n  //     const result = await response.json();\n  //     console.log(result);\n  //   } catch (error){\n  //     console.error('could not register', error)\n  //   }\n  // };\n\n//   export function loginUser (loginInfo){\n//   return fetch(`${API}/users/login`,{\n//      method: 'POST',\n//      headers: {\n//        'Content-Type': 'application/json'\n//      },\n//      body: JSON.stringify\n//      (\n//        loginInfo\n//        ),\n//    }\n//    ).then(response => response.json())\n//    .then(result =>{\n//      result.data.token ? localStorage.setItem(\"myToken\", result.data.token): console.log(result);\n//      console.log(result)\n//      return result;\n//    }).catch(console.error);\n//  }\n  \n\n export function createPost (postInfo){\n  return fetch(`${API}/posts`,{\n     method: 'POST',\n     headers: {\n       'Content-Type': 'application/json',\n       'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n     },\n     body: JSON.stringify\n     (\n       postInfo\n       ),\n   }\n   ).then(response => response.json())\n   .then(result =>{\n     console.log(result)\n     return result;\n   }).catch(console.error);\n }\n\n\n export async function deletePost(postId) {\n  try {\n    const response =  await fetch(`${API}/posts/${postId}`, {\n      method:  'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    })\n    ;\n    const result = await response.json();\n    console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function getMe() {\n  try {\n    const response =  localStorage.getItem(\"myToken\")\n    ? \n    await fetch(`${API}/users/me`, {\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    })\n    :\n    await fetch(`${API}/users/me`)\n    ;\n    const result = await response.json();\n    // console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\n\nexport async function sendMessage (messageInfo, postId) {\n  try{\n    const response = await fetch(`${API}/posts/${postId}/messages`,\n    {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify(\n        messageInfo\n        ),\n    }\n    );\n    const result = await response.json();\n    return results\n    console.log(result);\n  } catch (error){\n    console.error('could not send message', error)\n  }\n};\n\nexport async function getIndvPosts(id) {\n  try {\n    const response =  localStorage.getItem(\"myToken\")\n    ? \n    await fetch(`${API}/posts/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      }\n    })\n    :\n    await fetch(`${API}/posts`)\n    ;\n    const result = await response.json();\n    // console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nexport async function editPosts(info, id) {\n  try {\n    const response =  await fetch(`${API}/posts/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        'Content-Type': 'application/json',\n     'Authorization': `Bearer ${localStorage.getItem(\"myToken\")}`\n      },\n      body: JSON.stringify(\n        info\n      )\n    });\n    const result = await response.json();\n    console.log(result)\n    return result;\n  } catch (error) {\n    throw error;\n  }\n}\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nexport const callApi = async ({ url, method, token, body }) => {\n  console.log({ url, method, token, body })\n  try {\n\n    const options = {\n      method: method ? method.toUpperCase() : 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    };\n\n    if (token) {\n      options.headers['Authorization'] = `Bearer ${token}`;\n    }\n    // console.log('request url: ', REACT_APP_BASE_URL + url)\n    // console.log('options: ', options);\n    const response = await fetch(REACT_APP_BASE_URL + url, options);\n    const data = await response.json();\n    // console.log('data: ', data);\n    if (data.error) throw data.error;\n    console.log(data)\n    return data;\n  } catch (error) {\n    console.error('ERROR: ', error);\n    alert(error.message)\n    return error\n  }\n}\n\n\n// REACT_APP_BASE_URL = https://strangers-things.herokuapp.com/api/2110-VPI-WEB-PT\n// node app.js\n\n// process.env.REACT_APP_BASE_URL"]},"metadata":{},"sourceType":"module"}