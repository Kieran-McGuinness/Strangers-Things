{"ast":null,"code":"var _jsxFileName = \"/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Register.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { API, callApi, cohortName, registerNew } from \"../api\";\nimport { Box } from \"@mui/system\";\nimport { TextField } from \"@mui/material\";\nimport { Button } from \"@mui/material\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = props => {\n  _s();\n\n  const [passwordMatch, setPasswordMatch] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  useEffect(() => {\n    if (password === confirmPassword) {\n      setPasswordMatch(false);\n    } else if (password !== confirmPassword) {\n      setPasswordMatch(true);\n    }\n  }, [confirmPassword, password]);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    let regInfo = {\n      user: {\n        username: `${username}`,\n        password: `${password}`\n      }\n    }; // console.log(username)\n    // console.log(password)\n    // console.log(confirmPassword)\n    // console.log(regInfo)\n\n    if (!passwordMatch) {\n      const results = await callApi({\n        url: \"/users/register\",\n        method: \"POST\",\n        body: regInfo\n      });\n      setPassword(\"\");\n      setUsername(\"\");\n      setConfirmPassword(\"\");\n\n      if (results.success) {\n        document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n        document.getElementById(\"float\").innerText = `${results.data.message} Please Login to Continue`;\n        setTimeout(function () {\n          document.getElementById(\"float\").className = \"hidden\";\n        }, 10000);\n      }\n    } else {\n      document.getElementsByClassName(\"hidden\")[0].className = \"visible\";\n      document.getElementById(\"float\").innerText = `Passwords Must Match`;\n      setTimeout(function () {\n        document.getElementById(\"float\").className = \"hidden\";\n      }, 5000);\n    }\n  };\n\n  const handleConfirmPasswordChange = event => {\n    setConfirmPassword(event.target.value);\n  };\n\n  const handlePasswordChange = event => {\n    setPassword(event.target.value);\n  };\n\n  const handleUsernameChange = event => {\n    setUsername(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"register\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      noValidate: true,\n      autoComplete: \"off\",\n      id: \"register\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"registersername\",\n        label: \"Username:\",\n        value: username,\n        variant: \"standard\",\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        required: true,\n        id: \"registerpassword\",\n        label: \"Password:\",\n        value: password,\n        variant: \"standard\",\n        type: \"password\",\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        error: passwordMatch,\n        helperText: \"Passwords must match\",\n        required: true,\n        id: \"registerpasswordconfirm\",\n        label: \"Confirm Password:\",\n        value: confirmPassword,\n        variant: \"standard\",\n        type: \"password\",\n        onChange: handleConfirmPasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        type: \"submit\",\n        sx: {\n          mt: .5\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Register, \"N0Yq3uxaAcv10qcoafCc92gumZs=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/kieran/Documents/Full Stack/course_work/Strangers.Things/src/components/Register.js"],"names":["useState","API","callApi","cohortName","registerNew","Box","TextField","Button","useEffect","Register","props","passwordMatch","setPasswordMatch","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","handleSubmit","event","preventDefault","regInfo","user","results","url","method","body","success","document","getElementsByClassName","className","getElementById","innerText","data","message","setTimeout","handleConfirmPasswordChange","target","value","handlePasswordChange","handleUsernameChange","mt"],"mappings":"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","sourcesContent":["import { useState } from \"react\"\nimport { API, callApi, cohortName, registerNew } from \"../api\"\nimport { Box } from \"@mui/system\"\nimport { TextField } from \"@mui/material\"\nimport { Button } from \"@mui/material\"\nimport { useEffect } from \"react\"\n\nconst Register = (props) => {\n    const [passwordMatch, setPasswordMatch] = useState(false)\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    useEffect(() => {\n        if (password === confirmPassword) {\n            setPasswordMatch(false)\n        } else if (password !== confirmPassword) {\n            setPasswordMatch(true)\n        }\n    }, [confirmPassword, password])\n\n    const handleSubmit = async (event) => {\n        event.preventDefault()\n        let regInfo = {\n            user: {\n                username: `${username}`,\n                password: `${password}`\n            }\n        }\n        // console.log(username)\n        // console.log(password)\n        // console.log(confirmPassword)\n        // console.log(regInfo)\n\n        if (!passwordMatch) {\n            const results = await callApi({ url: \"/users/register\", method: \"POST\", body: regInfo })\n            setPassword(\"\")\n            setUsername(\"\")\n            setConfirmPassword(\"\")\n            if (results.success) {\n                document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n                document.getElementById(\"float\").innerText = `${results.data.message} Please Login to Continue`\n                setTimeout(function () {\n                    document.getElementById(\"float\").className = \"hidden\";\n                }, 10000)\n            }\n        } else {\n            document.getElementsByClassName(\"hidden\")[0].className = \"visible\"\n            document.getElementById(\"float\").innerText = `Passwords Must Match`\n            setTimeout(function () {\n                document.getElementById(\"float\").className = \"hidden\";\n            }, 5000)\n\n        }\n    }\n    const handleConfirmPasswordChange = (event) => {\n        setConfirmPassword(event.target.value)\n\n    }\n    const handlePasswordChange = (event) => {\n        setPassword(event.target.value)\n    }\n    const handleUsernameChange = (event) => {\n        setUsername(event.target.value)\n    }\n\n    return (\n        <div id=\"register\">\n            <Box component=\"form\" noValidate autoComplete=\"off\" id=\"register\" onSubmit={handleSubmit}>\n                <TextField required id=\"registersername\" label=\"Username:\" value={username} variant=\"standard\" onChange={handleUsernameChange} />\n                <TextField required id=\"registerpassword\" label=\"Password:\" value={password} variant=\"standard\" type=\"password\" onChange={handlePasswordChange} />\n                <TextField error={passwordMatch} helperText=\"Passwords must match\" required id=\"registerpasswordconfirm\" label=\"Confirm Password:\" value={confirmPassword} variant=\"standard\" type=\"password\" onChange={handleConfirmPasswordChange} />\n                <Button variant=\"contained\" color=\"primary\" type=\"submit\" sx={{ mt: .5 }}>Submit</Button>\n            </Box>\n        </div>\n\n    )\n}\n\n\n\nexport default Register"]},"metadata":{},"sourceType":"module"}